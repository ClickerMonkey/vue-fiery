{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-fiery.js","webpack:///webpack/bootstrap f783f0433a2c7e691fe9","webpack:///./src/index.ts","webpack:///./src/vue-fiery.ts","webpack:///./src/util.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","vue_fiery_1","default","destroyDocuments","vm","map","fromObject","old","destroyDocument","$delete","factoryInstance","source","options","getEntry","entry","chosenFactory","where","factoryMap","factoryCollection","factoryDocument","query","once","promise","get","onceOptions","then","querySnapshot","target","missing","forEach","doc","updated","refreshDocument","$set","onError","onSuccess","catch","off","onSnapshot","liveOptions","docChanges","change","type","i","length","PROP_UID","splice","push","created","newIndex","oldIndex","handleDocumentUpdate","exists","reset","property","onMissing","parseDocument","_a","data","out","util_1","isObject","propValue","key","existing","replace","sub","subProp","copyData","getDocumentIdentifier","record","recordOptions","set","fields","update","remove","excludeSubs","ref","subOptions","subEntryKey","path","ENTRY_SEPARATOR","subEntry","collection","prop","getMetadata","fiery","$fiery","closeEntry","index","entryList","iterable","callback","isArray","getStoreKey","UID_SEPARATOR","firestore","_firestore","db","_databaseId","database","STORE_SEPARATOR","projectId","storeIdToKey","storeKeyNext","stores","normalizeOptions","isFunction","message","results","onRemove","PROP_VALUE","RECORD_OPTION_SET","RECORD_OPTION_UPDATE","RECORD_OPTION_REMOVE","RECORD_OPTION_REF","exclude","excludeArray","excludeMap","parent","optionKeyNext","optionsInput","entryKeyInput","useRawOptions","entryKey","fires","$fires","isArraySource","getValues","explicit","include","values","uid","split","storeKey","optionKey","store","parseInt","_this","delete","init","bind","destroy","link","install","Vue","mixin","beforeCreate","beforeDestroy","window","use","x","prototype","toString","Array"],"mappings":"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","file":"vue-fiery.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueFiery\"] = factory();\n\telse\n\t\troot[\"VueFiery\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueFiery\"] = factory();\n\telse\n\t\troot[\"VueFiery\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar vue_fiery_1 = __webpack_require__(1);\n\texports.default = vue_fiery_1.default;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar util_1 = __webpack_require__(2);\n\tvar PROP_VALUE = '.value';\n\tvar PROP_UID = '.uid';\n\tvar UID_SEPARATOR = '///';\n\tvar ENTRY_SEPARATOR = '/';\n\tvar STORE_SEPARATOR = '/';\n\tvar RECORD_OPTION_SET = '$set';\n\tvar RECORD_OPTION_UPDATE = '$update';\n\tvar RECORD_OPTION_REMOVE = '$remove';\n\tvar RECORD_OPTION_REF = '$ref';\n\tfunction destroyDocuments(vm, map, fromObject) {\n\t    for (var id in map) {\n\t        var old = map[id];\n\t        destroyDocument(vm, old);\n\t        if (fromObject) {\n\t            vm.$delete(fromObject, id);\n\t        }\n\t    }\n\t}\n\tfunction factoryInstance(vm) {\n\t    return function (source, options) {\n\t        return factory(vm, getEntry(vm, source, options));\n\t    };\n\t}\n\tfunction factory(vm, entry) {\n\t    var chosenFactory = entry.source.where\n\t        ? (entry.options.map ? factoryMap : factoryCollection)\n\t        : factoryDocument;\n\t    return chosenFactory(vm, entry);\n\t}\n\tfunction factoryMap(vm, entry) {\n\t    var options = entry.options;\n\t    var query = (options.query ? options.query(entry.source) : entry.source);\n\t    if (options.once) {\n\t        entry.promise = query.get(options.onceOptions)\n\t            .then(function (querySnapshot) {\n\t            var target = entry.target;\n\t            var missing = {};\n\t            for (var id in target) {\n\t                missing[id] = target[id];\n\t            }\n\t            querySnapshot.forEach(function (doc) {\n\t                var old = target[doc.id];\n\t                var updated = refreshDocument(vm, entry, doc, old);\n\t                vm.$set(target, doc.id, updated);\n\t                delete missing[doc.id];\n\t            }, options.onError);\n\t            destroyDocuments(vm, missing, target);\n\t            options.onSuccess(target);\n\t        }).catch(options.onError);\n\t    }\n\t    else {\n\t        entry.off = query.onSnapshot(options.liveOptions, function (querySnapshot) {\n\t            var target = entry.target;\n\t            querySnapshot.docChanges().forEach(function (change) {\n\t                var doc = change.doc;\n\t                switch (change.type) {\n\t                    case 'modified':\n\t                    case 'added':\n\t                        var old = target[doc.id];\n\t                        var updated = refreshDocument(vm, entry, doc, old);\n\t                        vm.$set(target, doc.id, updated);\n\t                        break;\n\t                    case 'removed':\n\t                        destroyDocument(vm, target[doc.id]);\n\t                        vm.$delete(target, doc.id);\n\t                        break;\n\t                }\n\t            }, options.onError);\n\t            options.onSuccess(target);\n\t        }, options.onError);\n\t    }\n\t    return entry.target;\n\t}\n\tfunction factoryCollection(vm, entry) {\n\t    var options = entry.options;\n\t    var query = (options.query ? options.query(entry.source) : entry.source);\n\t    if (options.once) {\n\t        entry.promise = query.get(options.onceOptions)\n\t            .then(function (querySnapshot) {\n\t            var target = entry.target;\n\t            var missing = {};\n\t            for (var i = 0; i < target.length; i++) {\n\t                var old = target[i];\n\t                missing[old[PROP_UID]] = old;\n\t            }\n\t            target.splice(0, target.length);\n\t            querySnapshot.forEach(function (doc) {\n\t                var old = missing[doc.id];\n\t                var updated = refreshDocument(vm, entry, doc, old);\n\t                target.push(updated);\n\t                delete missing[updated[PROP_UID]];\n\t            }, options.onError);\n\t            destroyDocuments(vm, missing);\n\t            options.onSuccess(target);\n\t        }).catch(options.onError);\n\t    }\n\t    else {\n\t        entry.off = query.onSnapshot(options.liveOptions, function (querySnapshot) {\n\t            var target = entry.target;\n\t            querySnapshot.docChanges().forEach(function (change) {\n\t                var doc = change.doc;\n\t                switch (change.type) {\n\t                    case 'added':\n\t                        var created = refreshDocument(vm, entry, doc);\n\t                        target.splice(change.newIndex, 0, created);\n\t                        break;\n\t                    case 'removed':\n\t                        target.splice(change.oldIndex, 1);\n\t                        break;\n\t                    case 'modified':\n\t                        var old = target[change.oldIndex];\n\t                        var updated = refreshDocument(vm, entry, doc, old);\n\t                        if (change.oldIndex !== change.newIndex) {\n\t                            target.splice(change.oldIndex, 1);\n\t                            target.splice(change.newIndex, 0, updated);\n\t                        }\n\t                        else {\n\t                            target.splice(change.newIndex, 1, updated);\n\t                        }\n\t                        break;\n\t                }\n\t            }, options.onError);\n\t            options.onSuccess(target);\n\t        }, options.onError);\n\t    }\n\t    return entry.target;\n\t}\n\tfunction factoryDocument(vm, entry) {\n\t    var source = entry.source;\n\t    var options = entry.options;\n\t    if (options.once) {\n\t        entry.promise = source.get(options.onceOptions)\n\t            .then(function (doc) {\n\t            handleDocumentUpdate(vm, entry, doc);\n\t        }).catch(options.onError);\n\t    }\n\t    else {\n\t        entry.off = source.onSnapshot(options.liveOptions, function (doc) {\n\t            handleDocumentUpdate(vm, entry, doc);\n\t        }, options.onError);\n\t    }\n\t    return entry.target;\n\t}\n\tfunction handleDocumentUpdate(vm, entry, doc) {\n\t    var options = entry.options;\n\t    if (!doc.exists) {\n\t        options.onMissing();\n\t    }\n\t    else {\n\t        entry.target = refreshDocument(vm, entry, doc, entry.target);\n\t        if (options.reset && options.property) {\n\t            vm[options.property] = entry.target;\n\t        }\n\t        options.onSuccess(entry.target);\n\t    }\n\t}\n\tfunction parseDocument(doc, options) {\n\t    var _a;\n\t    var value = doc.data();\n\t    var out = (util_1.isObject(value) ? value : (_a = {}, _a[options.propValue] = value, _a));\n\t    if (out && options.key) {\n\t        out[options.key] = doc.id;\n\t    }\n\t    return out;\n\t}\n\tfunction refreshDocument(vm, entry, doc, data) {\n\t    var options = entry.options;\n\t    var property = options.property;\n\t    var existing = !!data;\n\t    var replace = !!(options.reset && property);\n\t    var updated = parseDocument(doc, options);\n\t    if (!data || replace) {\n\t        if (data && options.sub) {\n\t            for (var subProp in options.sub) {\n\t                if (data[subProp]) {\n\t                    updated[subProp] = data[subProp];\n\t                }\n\t            }\n\t        }\n\t        if (options.type) {\n\t            data = copyData(vm, new options.type(), updated);\n\t        }\n\t        else {\n\t            data = updated;\n\t        }\n\t    }\n\t    else {\n\t        copyData(vm, data, updated);\n\t    }\n\t    if (!data[PROP_UID]) {\n\t        data[PROP_UID] = getDocumentIdentifier(vm, options, doc);\n\t    }\n\t    if (!existing && options.record) {\n\t        var recordOptions = options.recordOptions;\n\t        if (recordOptions.set) {\n\t            data[recordOptions.set] = function (fields) {\n\t                return set.call(vm, this, fields);\n\t            };\n\t        }\n\t        if (recordOptions.update) {\n\t            data[recordOptions.update] = function (fields) {\n\t                return update.call(vm, this, fields);\n\t            };\n\t        }\n\t        if (recordOptions.remove) {\n\t            data[recordOptions.remove] = function (excludeSubs) {\n\t                if (excludeSubs === void 0) { excludeSubs = false; }\n\t                return remove.call(vm, this, excludeSubs);\n\t            };\n\t        }\n\t        if (recordOptions.ref) {\n\t            data[recordOptions.ref] = function (sub) {\n\t                return ref.call(vm, this, sub);\n\t            };\n\t        }\n\t    }\n\t    if (!existing && options.sub) {\n\t        for (var subProp in options.sub) {\n\t            var subOptions = options.sub[subProp];\n\t            var subEntryKey = doc.ref.path + ENTRY_SEPARATOR + subProp;\n\t            var subEntry = getEntry(vm, doc.ref.collection(subProp), subOptions, subEntryKey, true);\n\t            data[subProp] = factory(vm, subEntry);\n\t        }\n\t    }\n\t    return data;\n\t}\n\tfunction copyData(vm, data, update) {\n\t    for (var prop in update) {\n\t        vm.$set(data, prop, update[prop]);\n\t    }\n\t    return data;\n\t}\n\tfunction destroyDocument(vm, data) {\n\t    var _a = getMetadata(vm, data), path = _a.path, options = _a.options;\n\t    if (options.sub) {\n\t        var fiery = vm.$fiery;\n\t        for (var subProp in options.sub) {\n\t            var subEntryKey = path + ENTRY_SEPARATOR + subProp;\n\t            var subEntry = fiery.entry[subEntryKey];\n\t            if (subEntry) {\n\t                closeEntry(subEntry);\n\t                delete fiery.entry[subEntryKey];\n\t                if (typeof subEntry.index === 'number') {\n\t                    fiery.entryList[subEntry.index] = null;\n\t                    delete subEntry.index;\n\t                }\n\t            }\n\t            forEach(data[subProp], function (value) {\n\t                destroyDocument(vm, value);\n\t            });\n\t        }\n\t    }\n\t}\n\tfunction forEach(iterable, callback) {\n\t    if (util_1.isArray(iterable)) {\n\t        for (var i = 0; i < iterable.length; i++) {\n\t            callback(iterable[i], i, iterable);\n\t        }\n\t        return true;\n\t    }\n\t    else if (util_1.isObject(iterable)) {\n\t        for (var prop in iterable) {\n\t            callback(iterable[prop], prop, iterable);\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\tfunction getDocumentIdentifier(vm, options, doc) {\n\t    return getStoreKey(vm, doc) +\n\t        UID_SEPARATOR +\n\t        options.id +\n\t        UID_SEPARATOR +\n\t        doc.ref.path;\n\t}\n\tfunction getStoreKey(vm, doc) {\n\t    var firestore = doc._firestore;\n\t    var db = firestore._databaseId;\n\t    var id = db.database + STORE_SEPARATOR + db.projectId;\n\t    var fiery = vm.$fiery;\n\t    var key = fiery.storeIdToKey[id];\n\t    if (!key) {\n\t        key = ++fiery.storeKeyNext;\n\t        fiery.stores[key] = firestore;\n\t        fiery.storeIdToKey[id] = key;\n\t    }\n\t    return key;\n\t}\n\tfunction normalizeOptions(vm, options, source) {\n\t    if (!options || !util_1.isObject(options)) {\n\t        options = {};\n\t    }\n\t    if (!util_1.isFunction(options.onError)) {\n\t        options.onError = function (message) { };\n\t    }\n\t    if (!util_1.isFunction(options.onMissing)) {\n\t        options.onMissing = function () { };\n\t    }\n\t    if (!util_1.isFunction(options.onSuccess)) {\n\t        options.onSuccess = function (results) { };\n\t    }\n\t    if (!util_1.isFunction(options.onRemove)) {\n\t        options.onRemove = function () { };\n\t    }\n\t    if (!options.liveOptions) {\n\t        options.liveOptions = {};\n\t    }\n\t    if (!options.propValue) {\n\t        options.propValue = PROP_VALUE;\n\t    }\n\t    if (!options.recordOptions) {\n\t        options.recordOptions = {\n\t            set: RECORD_OPTION_SET,\n\t            update: RECORD_OPTION_UPDATE,\n\t            remove: RECORD_OPTION_REMOVE,\n\t            ref: RECORD_OPTION_REF\n\t        };\n\t    }\n\t    if (!options.exclude) {\n\t        options.exclude = {};\n\t        if (options.key) {\n\t            options.exclude[options.key] = true;\n\t        }\n\t    }\n\t    else if (util_1.isArray(options.exclude)) {\n\t        var excludeArray = options.exclude;\n\t        options.exclude = {};\n\t        for (var i = 0; i < excludeArray.length; i++) {\n\t            options.exclude[excludeArray[i]] = true;\n\t        }\n\t    }\n\t    var excludeMap = options.exclude;\n\t    excludeMap[options.propValue] = true;\n\t    excludeMap[PROP_UID] = true;\n\t    if (options.sub) {\n\t        for (var subProp in options.sub) {\n\t            var subOptions = normalizeOptions(vm, options.sub[subProp]);\n\t            subOptions.property = subProp;\n\t            subOptions.parent = options;\n\t            options.sub[subProp] = subOptions;\n\t        }\n\t    }\n\t    if (!options.id) {\n\t        var fiery = vm.$fiery;\n\t        options.id = ++fiery.optionKeyNext;\n\t        fiery.options[options.id] = options;\n\t    }\n\t    return options;\n\t}\n\tfunction closeEntry(entry) {\n\t    if (entry && entry.off) {\n\t        entry.off();\n\t        delete entry.off;\n\t    }\n\t}\n\tfunction getEntry(vm, source, optionsInput, entryKeyInput, useRawOptions) {\n\t    if (useRawOptions === void 0) { useRawOptions = false; }\n\t    var options = useRawOptions\n\t        ? optionsInput\n\t        : normalizeOptions(vm, optionsInput, source);\n\t    var property = options.property;\n\t    var entryKey = entryKeyInput || property || '';\n\t    var fiery = vm.$fiery;\n\t    var fires = vm.$fires;\n\t    var target = util_1.isArraySource(source, options) ? [] : {};\n\t    var existing = fiery.entry[entryKey];\n\t    var entry = { source: source, options: options, target: target };\n\t    if (existing) {\n\t        closeEntry(existing);\n\t        entry.target = existing.target;\n\t    }\n\t    if (!entryKey || !(entryKey in fiery.entry)) {\n\t        entry.index = fiery.entryList.length;\n\t        fiery.entryList.push(entry);\n\t    }\n\t    if (entryKey) {\n\t        fiery.entry[entryKey] = entry;\n\t    }\n\t    if (property) {\n\t        fires[property] = source;\n\t    }\n\t    return entry;\n\t}\n\tfunction getValues(data, options, fields) {\n\t    var explicit = fields || options.include;\n\t    var values = {};\n\t    if (explicit) {\n\t        for (var i = 0; i < explicit.length; i++) {\n\t            var prop = explicit[i];\n\t            if (prop in data) {\n\t                values[prop] = data[prop];\n\t            }\n\t        }\n\t    }\n\t    else {\n\t        for (var prop in data) {\n\t            if (!(prop in options.exclude)) {\n\t                values[prop] = data[prop];\n\t            }\n\t        }\n\t    }\n\t    return values;\n\t}\n\tfunction getMetadata(vm, data) {\n\t    var uid = data[PROP_UID];\n\t    var _a = uid.split(UID_SEPARATOR), storeKey = _a[0], optionKey = _a[1], path = _a[2];\n\t    var store = vm.$fiery.stores[storeKey];\n\t    var options = vm.$fiery.options[parseInt(optionKey)];\n\t    return { uid: uid, path: path, storeKey: storeKey, store: store, optionKey: optionKey, options: options };\n\t}\n\tfunction update(data, fields) {\n\t    var _a = getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    if (store && path) {\n\t        var values = getValues(data, options, fields);\n\t        return store.doc(path).update(values);\n\t    }\n\t}\n\tfunction set(data, fields) {\n\t    var _a = getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    if (store && path) {\n\t        var values = getValues(data, options, fields);\n\t        return store.doc(path).set(values);\n\t    }\n\t}\n\tfunction remove(data, excludeSubs) {\n\t    var _this = this;\n\t    if (excludeSubs === void 0) { excludeSubs = false; }\n\t    var _a = getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    if (store && path) {\n\t        if (!excludeSubs && options.sub) {\n\t            for (var subProp in options.sub) {\n\t                forEach(data[subProp], function (sub) {\n\t                    _this.remove(sub);\n\t                });\n\t            }\n\t        }\n\t        return store.doc(path).delete();\n\t    }\n\t}\n\tfunction ref(data, sub) {\n\t    var _a = getMetadata(this, data), store = _a.store, path = _a.path;\n\t    if (store && path) {\n\t        var doc = store.doc(path);\n\t        return sub ? doc.collection(sub) : doc;\n\t    }\n\t}\n\tfunction init() {\n\t    var _this = this;\n\t    this.$fiery = factoryInstance(this);\n\t    this.$fiery.stores = {};\n\t    this.$fiery.storeKeyNext = 0;\n\t    this.$fiery.storeIdToKey = {};\n\t    this.$fiery.options = {};\n\t    this.$fiery.optionKeyNext = 0;\n\t    this.$fiery.entry = {};\n\t    this.$fiery.entryList = [];\n\t    this.$fiery.update = update.bind(this);\n\t    this.$fiery.set = set.bind(this);\n\t    this.$fiery.remove = remove.bind(this);\n\t    this.$fiery.ref = ref.bind(this);\n\t    this.$fiery.getMetadata = function (data) { return getMetadata(_this, data); };\n\t    this.$fires = {};\n\t}\n\tfunction destroy() {\n\t    this.$fiery.stores = {};\n\t    this.$fiery.entry = {};\n\t    this.$fiery.entryList.forEach(closeEntry);\n\t    this.$fiery.entryList = [];\n\t    this.$fiery = (function () { });\n\t    this.$fires = {};\n\t}\n\tfunction link() {\n\t    var entryList = this.$fiery.entryList;\n\t    for (var i = 0; i < entryList.length; i++) {\n\t        var entry = entryList[i];\n\t        if (entry === null) {\n\t            continue;\n\t        }\n\t        var options = entry.options;\n\t        if (!options.parent && !options.property) {\n\t            for (var prop in this) {\n\t                if (this[prop] === entry.target) {\n\t                    options.property = prop;\n\t                    this.$fiery.entry[prop] = entry;\n\t                    this.$fires[prop] = entry.source;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\tfunction install(Vue) {\n\t    Vue.mixin({\n\t        beforeCreate: init,\n\t        created: link,\n\t        beforeDestroy: destroy\n\t    });\n\t}\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(install);\n\t}\n\texports.default = install;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction isObject(x) {\n\t    return Object.prototype.toString.call(x) === '[object Object]';\n\t}\n\texports.isObject = isObject;\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\tfunction isArray(x) {\n\t    return x && x instanceof Array;\n\t}\n\texports.isArray = isArray;\n\tfunction isArraySource(source, options) {\n\t    return !!(source.where && !options.map);\n\t}\n\texports.isArraySource = isArraySource;\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// vue-fiery.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f783f0433a2c7e691fe9","import VueFiery from './vue-fiery'\n\nexport default VueFiery\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","\nimport * as firebase from 'firebase'\n\n\nimport {\n  isObject,\n  isFunction,\n  isArray,\n  isArraySource\n} from './util'\n\nimport {\n  FieryOptions,\n  FieryFactory,\n  FieryInstanceFactory,\n  FieryInstance,\n  FieryTarget,\n  FieryEntry,\n  FieryData,\n  FieryMap,\n  FierySources,\n  FieryMetadata,\n  FieryVue,\n  FieryExclusions,\n  FierySource\n} from './types'\n\n\ntype Query = firebase.firestore.Query\ntype QuerySnapshot = firebase.firestore.QuerySnapshot\ntype DocumentSnapshot = firebase.firestore.DocumentSnapshot\ntype DocumentChange = firebase.firestore.DocumentChange\ntype DocumentReference = firebase.firestore.DocumentReference\ntype CollectionReference = firebase.firestore.CollectionReference\ntype Firestore = firebase.firestore.Firestore\ntype QueryListenOptions = firebase.firestore.QueryListenOptions\ntype DocumentListenOptions = firebase.firestore.DocumentListenOptions\n\n\n\nconst PROP_VALUE = '.value'\nconst PROP_UID = '.uid'\nconst UID_SEPARATOR = '///'\nconst ENTRY_SEPARATOR = '/'\nconst STORE_SEPARATOR = '/'\nconst RECORD_OPTION_SET = '$set'\nconst RECORD_OPTION_UPDATE = '$update'\nconst RECORD_OPTION_REMOVE = '$remove'\nconst RECORD_OPTION_REF = '$ref'\n\n\nfunction destroyDocuments(vm: FieryVue, map: FieryMap, fromObject?: FieryMap): void\n{\n  for (let id in map)\n  {\n    const old: FieryData = map[id]\n\n    destroyDocument(vm, old)\n\n    if (fromObject)\n    {\n      vm.$delete(fromObject, id)\n    }\n  }\n}\n\nfunction factoryInstance(vm: FieryVue): FieryInstanceFactory\n{\n  return (source: FierySource, options?: Partial<FieryOptions>): FieryTarget => {\n    return factory(vm, getEntry(vm, source, options))\n  }\n}\n\nfunction factory(vm: FieryVue, entry: FieryEntry): FieryTarget\n{\n  let chosenFactory = (<any>entry.source).where\n    ? (entry.options.map ? factoryMap : factoryCollection)\n    : factoryDocument\n\n  return chosenFactory(vm, entry)\n}\n\nfunction factoryMap(vm: FieryVue, entry: FieryEntry): FieryMap\n{\n  type CollectionQuery = CollectionReference | Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query ? options.query(entry.source) : entry.source) as CollectionQuery\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then((querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryMap = entry.target as FieryMap\n\n        let missing: FieryMap = {}\n        for (let id in target) {\n          missing[id] = target[id]\n        }\n\n        querySnapshot.forEach((doc: DocumentSnapshot) =>\n        {\n          const old: FieryData = target[doc.id]\n          const updated: FieryData = refreshDocument(vm, entry, doc, old)\n\n          vm.$set(target, doc.id, updated)\n          delete missing[doc.id]\n\n        }, options.onError)\n\n        destroyDocuments(vm, missing, target)\n\n        options.onSuccess(target)\n\n      }).catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(options.liveOptions as QueryListenOptions,\n      (querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryMap = entry.target as FieryMap\n\n        (<any>querySnapshot).docChanges().forEach((change: DocumentChange) =>\n        {\n          const doc: DocumentSnapshot = change.doc\n\n          switch (change.type) {\n            case 'modified':\n            case 'added':\n              const old: FieryData = target[doc.id]\n              const updated: FieryData = refreshDocument(vm, entry, doc, old)\n              vm.$set(target, doc.id, updated)\n              break\n            case 'removed':\n              destroyDocument(vm, target[doc.id])\n              vm.$delete(target, doc.id)\n              break\n          }\n        }, options.onError)\n\n        options.onSuccess(target)\n\n      }, options.onError)\n  }\n\n  return entry.target as FieryMap\n}\n\n\n\nfunction factoryCollection(vm: FieryVue, entry: FieryEntry): FieryData[]\n{\n  type CollectionQuery = CollectionReference | Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query ? options.query(entry.source) : entry.source) as CollectionQuery\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then((querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryData[] = entry.target as FieryData[]\n\n        const missing: FieryMap = {}\n\n        for (let i = 0; i < target.length; i++)\n        {\n          const old: FieryData = target[i]\n          missing[old[PROP_UID]] = old\n        }\n\n        target.splice(0, target.length);\n\n        querySnapshot.forEach((doc: DocumentSnapshot) =>\n        {\n          const old = missing[doc.id]\n          const updated = refreshDocument(vm, entry, doc, old)\n\n          target.push(updated)\n          delete missing[updated[PROP_UID]]\n\n        }, options.onError)\n\n        destroyDocuments(vm, missing)\n\n        options.onSuccess(target)\n\n      }).catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(options.liveOptions as QueryListenOptions,\n      (querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryData[] = entry.target as FieryData[]\n\n        (<any>querySnapshot).docChanges().forEach((change: DocumentChange) =>\n        {\n          const doc: DocumentSnapshot = change.doc\n\n          switch (change.type) {\n            case 'added':\n              const created: FieryData = refreshDocument(vm, entry, doc)\n              target.splice(change.newIndex, 0, created)\n              break\n            case 'removed':\n              target.splice(change.oldIndex, 1)\n              break\n            case 'modified':\n              const old: FieryData = target[change.oldIndex]\n              const updated: FieryData = refreshDocument(vm, entry, doc, old)\n\n              if (change.oldIndex !== change.newIndex) {\n                target.splice(change.oldIndex, 1)\n                target.splice(change.newIndex, 0, updated)\n              } else {\n                target.splice(change.newIndex, 1, updated)\n              }\n              break\n          }\n        }, options.onError)\n\n        options.onSuccess(target)\n\n      }, options.onError)\n  }\n\n  return entry.target as FieryData[]\n}\n\nfunction factoryDocument(vm: FieryVue, entry: FieryEntry): FieryData\n{\n  const source: DocumentReference = entry.source as DocumentReference\n  const options: FieryOptions = entry.options\n\n  if (options.once)\n  {\n    entry.promise = source.get(options.onceOptions)\n      .then((doc: DocumentSnapshot) =>\n      {\n        handleDocumentUpdate(vm, entry, doc)\n\n      }).catch(options.onError)\n  }\n  else\n  {\n    entry.off = source.onSnapshot(options.liveOptions as DocumentListenOptions,\n      (doc: DocumentSnapshot) =>\n      {\n        handleDocumentUpdate(vm, entry, doc)\n\n      }, options.onError)\n  }\n\n  return entry.target as FieryData\n}\n\nfunction handleDocumentUpdate(vm: FieryVue, entry: FieryEntry, doc: DocumentSnapshot): void\n{\n  const options: FieryOptions = entry.options\n\n  if (!doc.exists)\n  {\n    options.onMissing()\n  }\n  else\n  {\n    entry.target = refreshDocument(vm, entry, doc, entry.target)\n\n    if (options.reset && options.property)\n    {\n      vm[options.property] = entry.target\n    }\n\n    options.onSuccess(entry.target)\n  }\n}\n\nfunction parseDocument(doc: DocumentSnapshot, options: FieryOptions): FieryData\n{\n  let value = doc.data()\n  let out = (isObject(value) ? value : { [options.propValue]: value }) as FieryData\n\n  if (out && options.key)\n  {\n    out[options.key] = doc.id\n  }\n\n  return out\n}\n\nfunction refreshDocument(vm: FieryVue, entry: FieryEntry, doc: DocumentSnapshot, data?: FieryData): FieryData\n{\n  const options: FieryOptions = entry.options\n  const property: string | undefined = options.property\n  const existing: boolean = !!data\n  const replace: boolean = !!(options.reset && property)\n  const updated: FieryData = parseDocument(doc, options)\n\n  if (!data || replace)\n  {\n    if (data && options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        if (data[subProp])\n        {\n          updated[subProp] = data[subProp]\n        }\n      }\n    }\n\n    if (options.type)\n    {\n      data = copyData(vm, new options.type(), updated)\n    }\n    else\n    {\n      data = updated\n    }\n  }\n  else\n  {\n    copyData(vm, data, updated)\n  }\n\n  if (!data[PROP_UID])\n  {\n    data[PROP_UID] = getDocumentIdentifier(vm, options, doc)\n  }\n\n  if (!existing && options.record)\n  {\n    let recordOptions = options.recordOptions\n\n    if (recordOptions.set) {\n      data[recordOptions.set] = function(this: FieryData, fields?: string[]) {\n        return set.call(vm, this, fields)\n      }\n    }\n\n    if (recordOptions.update) {\n      data[recordOptions.update] = function(this: FieryData, fields?: string[]) {\n        return update.call(vm, this, fields)\n      }\n    }\n\n    if (recordOptions.remove) {\n      data[recordOptions.remove] = function(this: FieryData, excludeSubs: boolean = false) {\n        return remove.call(vm, this, excludeSubs)\n      }\n    }\n\n    if (recordOptions.ref) {\n      data[recordOptions.ref] = function(this: FieryData, sub?: string) {\n        return ref.call(vm, this, sub)\n      }\n    }\n  }\n\n  if (!existing && options.sub)\n  {\n    for (let subProp in options.sub)\n    {\n      let subOptions: FieryOptions = options.sub[subProp]\n      let subEntryKey: string = doc.ref.path + ENTRY_SEPARATOR + subProp\n      let subEntry: FieryEntry = getEntry(vm, doc.ref.collection(subProp), subOptions, subEntryKey, true)\n\n      data[subProp] = factory(vm, subEntry)\n    }\n  }\n\n  return data\n}\n\nfunction copyData(vm: FieryVue, data: FieryData, update: FieryData): FieryData\n{\n  for (let prop in update)\n  {\n    vm.$set(data, prop, update[prop])\n  }\n\n  return data\n}\n\nfunction destroyDocument(vm: FieryVue, data: FieryData): void\n{\n  let { path, options } = getMetadata(vm, data)\n\n  if (options.sub)\n  {\n    const fiery: FieryInstance = vm.$fiery\n\n    for (let subProp in options.sub)\n    {\n      let subEntryKey: string = path + ENTRY_SEPARATOR + subProp\n      let subEntry: FieryEntry = fiery.entry[ subEntryKey ]\n\n      if (subEntry)\n      {\n        closeEntry(subEntry)\n\n        delete fiery.entry[ subEntryKey ]\n\n        if (typeof subEntry.index === 'number')\n        {\n          fiery.entryList[subEntry.index] = null\n\n          delete subEntry.index\n        }\n      }\n\n      forEach(data[subProp], (value) =>\n      {\n        destroyDocument(vm, value)\n      })\n    }\n  }\n}\n\nfunction forEach(iterable: any, callback: (item: any, key?: number | string, iterable?: any) => any): boolean\n{\n  if (isArray(iterable))\n  {\n    for (let i = 0; i < iterable.length; i++)\n    {\n      callback(iterable[i], i, iterable)\n    }\n\n    return true\n  }\n  else if (isObject(iterable))\n  {\n    for (let prop in iterable)\n    {\n      callback(iterable[prop], prop, iterable)\n    }\n\n    return true\n  }\n\n  return false\n}\n\nfunction getDocumentIdentifier(vm: FieryVue, options: FieryOptions, doc: DocumentSnapshot)\n{\n  return getStoreKey(vm, doc) +\n    UID_SEPARATOR +\n    options.id +\n    UID_SEPARATOR +\n    doc.ref.path\n}\n\nfunction getStoreKey(vm: FieryVue, doc: DocumentSnapshot): number\n{\n  const firestore = (<any>doc)._firestore\n  const db = firestore._databaseId\n  const id: string = db.database + STORE_SEPARATOR + db.projectId\n\n  const fiery: FieryInstance = vm.$fiery\n  let key: number = fiery.storeIdToKey[id]\n\n  if (!key)\n  {\n    key = ++fiery.storeKeyNext\n    fiery.stores[key] = firestore\n    fiery.storeIdToKey[id] = key\n  }\n\n  return key\n}\n\nfunction normalizeOptions(vm: FieryVue, options?: Partial<FieryOptions>, source?: FierySource): FieryOptions\n{\n  if (!options || !isObject(options))\n  {\n    options = {}\n  }\n\n  if (!isFunction(options.onError))\n  {\n    options.onError = (message) => {}\n  }\n\n  if (!isFunction(options.onMissing))\n  {\n    options.onMissing = () => {}\n  }\n\n  if (!isFunction(options.onSuccess))\n  {\n    options.onSuccess = (results) => {}\n  }\n\n  if (!isFunction(options.onRemove))\n  {\n    options.onRemove = () => {}\n  }\n\n  if (!options.liveOptions)\n  {\n    options.liveOptions = {}\n  }\n\n  if (!options.propValue)\n  {\n    options.propValue = PROP_VALUE\n  }\n\n  if (!options.recordOptions)\n  {\n    options.recordOptions = {\n      set: RECORD_OPTION_SET,\n      update: RECORD_OPTION_UPDATE,\n      remove: RECORD_OPTION_REMOVE,\n      ref: RECORD_OPTION_REF\n    }\n  }\n\n  if (!options.exclude)\n  {\n    options.exclude = {}\n\n    if (options.key)\n    {\n      options.exclude[options.key] = true\n    }\n  }\n  else if (isArray(options.exclude))\n  {\n    let excludeArray = options.exclude as string[]\n\n    options.exclude = {}\n\n    for (let i = 0; i < excludeArray.length; i++)\n    {\n      options.exclude[excludeArray[i]] = true\n    }\n  }\n\n  let excludeMap = options.exclude as FieryExclusions\n  excludeMap[options.propValue] = true\n  excludeMap[PROP_UID] = true\n\n  if (options.sub)\n  {\n    for (let subProp in options.sub)\n    {\n      let subOptions = normalizeOptions(vm, options.sub[subProp] as Partial<FieryOptions>)\n\n      subOptions.property = subProp\n      subOptions.parent = options as FieryOptions\n\n      options.sub[subProp] = subOptions\n    }\n  }\n\n  if (!options.id)\n  {\n    const fiery: FieryInstance = vm.$fiery\n\n    options.id = ++fiery.optionKeyNext\n\n    fiery.options[options.id] = options as FieryOptions\n  }\n\n  return options as FieryOptions\n}\n\nfunction closeEntry(entry: FieryEntry): void\n{\n  if (entry && entry.off)\n  {\n    entry.off()\n\n    delete entry.off\n  }\n}\n\nfunction getEntry(vm: FieryVue, source: FierySource, optionsInput?: Partial<FieryOptions>, entryKeyInput?: string, useRawOptions: boolean = false)\n{\n  const options: FieryOptions = useRawOptions\n    ? optionsInput as FieryOptions\n    : normalizeOptions(vm, optionsInput, source)\n  const property: string | undefined = options.property\n  const entryKey: string = entryKeyInput || property || ''\n  const fiery: FieryInstance = vm.$fiery\n  const fires: FierySources = vm.$fires\n  const target: FieryTarget = isArraySource(source, options) ? [] : {}\n\n  let existing: FieryEntry | undefined = fiery.entry[ entryKey ]\n  let entry: FieryEntry = { source, options, target }\n\n  if (existing)\n  {\n    closeEntry(existing)\n\n    entry.target = existing.target\n  }\n\n  if (!entryKey || !(entryKey in fiery.entry))\n  {\n    entry.index = fiery.entryList.length\n\n    fiery.entryList.push(entry)\n  }\n\n  if (entryKey)\n  {\n    fiery.entry[ entryKey ] = entry\n  }\n\n  if (property)\n  {\n    fires[ property ] = source\n  }\n\n  return entry\n}\n\nfunction getValues(data: FieryData, options: FieryOptions, fields?: string[]): FieryData\n{\n  const explicit: string[] = fields || options.include\n  const values: FieryData = {}\n\n  if (explicit)\n  {\n    for (let i = 0; i < explicit.length; i++)\n    {\n      let prop: string = explicit[i]\n\n      if (prop in data)\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n  else\n  {\n    for (let prop in data)\n    {\n      if (!(prop in options.exclude))\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n\n  return values\n}\n\nfunction getMetadata(vm: FieryVue, data: FieryData): FieryMetadata\n{\n  const uid: string = data[PROP_UID]\n  const [storeKey, optionKey, path] = uid.split(UID_SEPARATOR)\n  const store: Firestore = vm.$fiery.stores[storeKey]\n  const options: FieryOptions = vm.$fiery.options[parseInt(optionKey)]\n\n  return { uid, path, storeKey, store, optionKey, options }\n}\n\nfunction update(this: FieryVue, data: FieryData, fields?: string[]): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    const values: FieryData = getValues(data, options, fields)\n\n    return store.doc(path).update(values)\n  }\n}\n\nfunction set(this: FieryVue, data: FieryData, fields?: string[]): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    const values = getValues(data, options, fields)\n\n    return store.doc(path).set(values)\n  }\n}\n\nfunction remove(this: FieryVue, data: FieryData, excludeSubs: boolean = false): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    if (!excludeSubs && options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        forEach(data[subProp], (sub) =>\n        {\n          this.remove(sub as FieryData)\n        })\n      }\n    }\n\n    return store.doc(path).delete()\n  }\n}\n\nfunction ref(this: FieryVue, data: FieryData, sub?: string): FierySource | undefined\n{\n  const { store, path } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    let doc = store.doc(path)\n\n    return sub ? doc.collection(sub) : doc\n  }\n}\n\nfunction init(this: FieryVue)\n{\n  this.$fiery = factoryInstance(this) as FieryInstance\n  this.$fiery.stores = {}\n  this.$fiery.storeKeyNext = 0\n  this.$fiery.storeIdToKey = {}\n  this.$fiery.options = {}\n  this.$fiery.optionKeyNext = 0\n  this.$fiery.entry = {}\n  this.$fiery.entryList = []\n  this.$fiery.update = update.bind(this)\n  this.$fiery.set = set.bind(this)\n  this.$fiery.remove = remove.bind(this)\n  this.$fiery.ref = ref.bind(this)\n  this.$fiery.getMetadata = (data) => getMetadata(this, data)\n  this.$fires = {}\n}\n\nfunction destroy(this: FieryVue)\n{\n  this.$fiery.stores = {}\n  this.$fiery.entry = {}\n  this.$fiery.entryList.forEach(closeEntry)\n  this.$fiery.entryList = []\n  this.$fiery = <any>(() => {}) as FieryInstance\n  this.$fires = {}\n}\n\nfunction link(this: FieryVue)\n{\n  const entryList: (FieryEntry | null)[] = this.$fiery.entryList\n\n  for (let i = 0; i < entryList.length; i++)\n  {\n    const entry: FieryEntry | null = entryList[i]\n\n    if (entry === null)\n    {\n      continue\n    }\n\n    const options: FieryOptions = entry.options\n\n    if (!options.parent && !options.property)\n    {\n      for (let prop in this)\n      {\n        if (this[prop] === entry.target)\n        {\n          options.property = prop\n\n          this.$fiery.entry[ prop ] = entry\n          this.$fires[ prop ] = entry.source\n\n          break\n        }\n      }\n    }\n  }\n}\n\nfunction install(Vue: any)\n{\n  Vue.mixin({\n    beforeCreate: init,\n    created: link,\n    beforeDestroy: destroy\n  })\n}\n\nif (typeof window !== 'undefined' && (<any>window).Vue)\n{\n  (<any>window).Vue.use(install)\n}\n\nexport default install\n\n\n\n// WEBPACK FOOTER //\n// ./src/vue-fiery.ts","\n\nimport { FieryOptions, FierySource } from './types'\n\n\nexport function isObject (x?: any): boolean\n{\n  return Object.prototype.toString.call(x) === '[object Object]'\n}\n\nexport function isFunction (x?: any): boolean\n{\n  return typeof x === 'function'\n}\n\nexport function isArray (x?: any): boolean\n{\n  return x && x instanceof Array\n}\n\nexport function isArraySource (source: FierySource, options: FieryOptions): boolean\n{\n  return !!((<any>source).where && !options.map)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.ts"],"sourceRoot":""}