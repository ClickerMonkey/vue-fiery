{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-fiery.js","webpack:///webpack/bootstrap bacfd7a3cd0151c0ea73","webpack:///./src/index.ts","webpack:///./src/plugin.ts","webpack:///./src/mixin.ts","webpack:///./src/util.ts","webpack:///./src/constants.ts","webpack:///./src/entry.ts","webpack:///./src/options.ts","webpack:///./src/operations.ts","webpack:///./src/documents.ts","webpack:///./src/factory/index.ts","webpack:///./src/factory/document.ts","webpack:///./src/factory/map.ts","webpack:///./src/factory/collection.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","plugin_1","default","mixin_1","options_1","plugin","mergeOptions","mergeStrategy","setGlobalOptions","install","Vue","mixin","beforeCreate","init","created","link","beforeDestroy","destroy","window","use","_this","$fiery","factory_1","factoryInstance","stores","storeKeyNext","storeIdToKey","entry","entryList","options","update","operations","bind","sync","remove","clear","getChanges","ref","getMetadata","data","util_1","$fires","forEach","opt","globalOptions","map","entry_1","closeEntry","i","length","parent","property","prop","target","source","isObject","x","prototype","toString","isFunction","isArray","Array","isDefined","coalesce","a","b","isCollectionSource","iterable","callback","vm","uid","constants_1","PROP_UID","_a","split","UID_SEPARATOR","storeKey","optionKey","path","store","parseInt","createRecord","record","recordOptions","recordFunctions","isEqual","PROP_VALUE","ENTRY_SEPARATOR","STORE_SEPARATOR","RECORD_OPTIONS","off","getEntry","optionsInput","entryKeyInput","useRawOptions","getOptions","newCollection","newDocument","getEntryRecordFunctions","entryKey","fiery","fires","existing","children","index","push","fields","excludeSubs","sub","props","fieldsOrCallback","callbackOrEquality","equalityOrNothing","defined","extends","performMerge","user","defaults","shared","type","typeConstructor_1","encoded","exclude","excludeArray","key","excludeMap","propValue","subProp","subOptionsInput","subOptions","nameOrMap","namedOptions","name_1","optionsProp","merger","__assign","assign","t","s","n","arguments","hasOwnProperty","undefined","onError","message","onMissing","onSuccess","results","onRemove","liveOptions","ignore","replace","chain","apply","shallow","concat","union","added","splice","exclusions_1","defaultsArray_1","optionsArray_1","query","once","reset","decode","decoders","encoders","onceOptions","include","values","getValues","doc","set","delete","propsArray","deleting","deleteCount","_i","propsArray_1","firebaseRuntime","app","firebase_","firestore","FieldValue","equality","current_1","get","then","documents_1","parseDocument","updated","old","changes","valueUpdated","valueOld","collection","explicit","decodeDocument","out","refreshDocument","decoded","replaced","copyData","identifier","getDocumentIdentifier","subEntryKey","subEntry","$set","destroyDocuments","fromObject","destroyDocument","$delete","getStoreKey","_firestore","db","_databaseId","database","projectId","chosenFactory","where","map_1","collection_1","document_1","promise","handleDocumentUpdate","catch","onSnapshot","exists","querySnapshot","missing","docChanges","change","newIndex","oldIndex"],"mappings":"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","file":"vue-fiery.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueFiery\"] = factory();\n\telse\n\t\troot[\"VueFiery\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueFiery\"] = factory();\n\telse\n\t\troot[\"VueFiery\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar plugin_1 = __webpack_require__(1);\n\texports.default = plugin_1.default;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar mixin_1 = __webpack_require__(2);\n\tvar options_1 = __webpack_require__(6);\n\texports.plugin = {\n\t    mergeOptions: options_1.mergeOptions,\n\t    mergeStrategy: options_1.mergeStrategy,\n\t    define: options_1.define,\n\t    setGlobalOptions: options_1.setGlobalOptions,\n\t    install: function (Vue) {\n\t        Vue.mixin({\n\t            beforeCreate: mixin_1.init,\n\t            created: mixin_1.link,\n\t            beforeDestroy: mixin_1.destroy\n\t        });\n\t    }\n\t};\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(exports.plugin);\n\t}\n\texports.default = exports.plugin;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar util_1 = __webpack_require__(3);\n\tvar entry_1 = __webpack_require__(5);\n\tvar options_1 = __webpack_require__(6);\n\tvar factory_1 = __webpack_require__(9);\n\tvar operations = __webpack_require__(7);\n\tfunction init() {\n\t    var _this = this;\n\t    this.$fiery = factory_1.factoryInstance(this);\n\t    this.$fiery.stores = {};\n\t    this.$fiery.storeKeyNext = 0;\n\t    this.$fiery.storeIdToKey = {};\n\t    this.$fiery.entry = {};\n\t    this.$fiery.entryList = [];\n\t    this.$fiery.options = {};\n\t    this.$fiery.update = operations.update.bind(this);\n\t    this.$fiery.sync = operations.sync.bind(this);\n\t    this.$fiery.remove = operations.remove.bind(this);\n\t    this.$fiery.clear = operations.clear.bind(this);\n\t    this.$fiery.getChanges = operations.getChanges.bind(this);\n\t    this.$fiery.ref = operations.ref.bind(this);\n\t    this.$fiery.link = link.bind(this);\n\t    this.$fiery.destroy = destroy.bind(this);\n\t    this.$fiery.getMetadata = function (data) { return util_1.getMetadata(_this, data); };\n\t    this.$fires = {};\n\t}\n\texports.init = init;\n\tfunction destroy() {\n\t    util_1.forEach(this.$fiery.options, function (opt) { return delete options_1.globalOptions.map[opt.id]; });\n\t    this.$fiery.stores = {};\n\t    this.$fiery.entry = {};\n\t    this.$fiery.entryList.forEach(entry_1.closeEntry);\n\t    this.$fiery.entryList = [];\n\t    this.$fiery.options = {};\n\t    this.$fiery = (function () { });\n\t    this.$fires = {};\n\t}\n\texports.destroy = destroy;\n\tfunction link() {\n\t    var entryList = this.$fiery.entryList;\n\t    for (var i = 0; i < entryList.length; i++) {\n\t        var entry = entryList[i];\n\t        if (entry === null) {\n\t            continue;\n\t        }\n\t        var options = entry.options;\n\t        if (!options.parent && !options.property) {\n\t            for (var prop in this) {\n\t                if (this[prop] === entry.target) {\n\t                    options.property = prop;\n\t                    this.$fiery.entry[prop] = entry;\n\t                    this.$fires[prop] = entry.source;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\texports.link = link;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar constants_1 = __webpack_require__(4);\n\tfunction isObject(x) {\n\t    return Object.prototype.toString.call(x) === '[object Object]';\n\t}\n\texports.isObject = isObject;\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\tfunction isArray(x) {\n\t    return x && x instanceof Array;\n\t}\n\texports.isArray = isArray;\n\tfunction isDefined(x) {\n\t    return typeof x !== 'undefined';\n\t}\n\texports.isDefined = isDefined;\n\tfunction coalesce(a, b) {\n\t    return isDefined(a) ? a : b;\n\t}\n\texports.coalesce = coalesce;\n\tfunction isCollectionSource(source) {\n\t    return !!(source.where);\n\t}\n\texports.isCollectionSource = isCollectionSource;\n\tfunction forEach(iterable, callback) {\n\t    if (isArray(iterable)) {\n\t        for (var i = 0; i < iterable.length; i++) {\n\t            callback(iterable[i], i, iterable);\n\t        }\n\t        return true;\n\t    }\n\t    else if (isObject(iterable)) {\n\t        for (var prop in iterable) {\n\t            callback(iterable[prop], prop, iterable);\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.forEach = forEach;\n\tfunction getMetadata(vm, data) {\n\t    var uid = data[constants_1.PROP_UID];\n\t    var _a = uid.split(constants_1.UID_SEPARATOR), storeKey = _a[0], optionKey = _a[1], path = _a[2];\n\t    var store = vm.$fiery.stores[parseInt(storeKey)];\n\t    var options = vm.$fiery.options[parseInt(optionKey)];\n\t    return { uid: uid, path: path, storeKey: storeKey, store: store, optionKey: optionKey, options: options };\n\t}\n\texports.getMetadata = getMetadata;\n\tfunction createRecord(data, entry) {\n\t    var options = entry.options;\n\t    if (options.record) {\n\t        var recordOptions = options.recordOptions;\n\t        var recordFunctions = entry.recordFunctions;\n\t        if (recordOptions.sync)\n\t            data[recordOptions.sync] = recordFunctions.sync;\n\t        if (recordOptions.update)\n\t            data[recordOptions.update] = recordFunctions.update;\n\t        if (recordOptions.remove)\n\t            data[recordOptions.remove] = recordFunctions.remove;\n\t        if (recordOptions.clear)\n\t            data[recordOptions.clear] = recordFunctions.clear;\n\t        if (recordOptions.getChanges)\n\t            data[recordOptions.getChanges] = recordFunctions.getChanges;\n\t        if (recordOptions.ref)\n\t            data[recordOptions.ref] = recordFunctions.ref;\n\t    }\n\t    return data;\n\t}\n\texports.createRecord = createRecord;\n\tfunction isEqual(a, b) {\n\t    if (a === b) {\n\t        return true;\n\t    }\n\t    if (!a || !b) {\n\t        return false;\n\t    }\n\t    if (isArray(a) && isArray(b)) {\n\t        if (a.length !== b.length) {\n\t            return false;\n\t        }\n\t        for (var i = 0; i < a.length; i++) {\n\t            if (!isEqual(a[i], b[i])) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t    if (isObject(a) && isObject(b)) {\n\t        for (var prop in a) {\n\t            if (!isEqual(a[prop], b[prop])) {\n\t                return false;\n\t            }\n\t        }\n\t        for (var prop in b) {\n\t            if (!(prop in a)) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.isEqual = isEqual;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.PROP_VALUE = '.value';\n\texports.PROP_UID = '.uid';\n\texports.UID_SEPARATOR = '///';\n\texports.ENTRY_SEPARATOR = '/';\n\texports.STORE_SEPARATOR = '/';\n\texports.RECORD_OPTIONS = {\n\t    sync: '$sync',\n\t    update: '$update',\n\t    remove: '$remove',\n\t    ref: '$ref',\n\t    clear: '$clear',\n\t    getChanges: '$getChanges'\n\t};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar util_1 = __webpack_require__(3);\n\tvar options_1 = __webpack_require__(6);\n\tvar operations = __webpack_require__(7);\n\tfunction closeEntry(entry) {\n\t    if (entry && entry.off) {\n\t        entry.off();\n\t        delete entry.off;\n\t    }\n\t}\n\texports.closeEntry = closeEntry;\n\tfunction getEntry(vm, source, optionsInput, entryKeyInput, useRawOptions) {\n\t    if (useRawOptions === void 0) { useRawOptions = false; }\n\t    var options = useRawOptions\n\t        ? optionsInput\n\t        : options_1.getOptions(optionsInput, vm);\n\t    var target = util_1.isCollectionSource(source)\n\t        ? options.newCollection()\n\t        : options.newDocument();\n\t    var recordFunctions = getEntryRecordFunctions(vm);\n\t    var property = options.property;\n\t    var entryKey = entryKeyInput || property || '';\n\t    var fiery = vm.$fiery;\n\t    var fires = vm.$fires;\n\t    var existing = fiery.entry[entryKey];\n\t    var children = {};\n\t    var entry = { source: source, options: options, target: target, children: children, recordFunctions: recordFunctions };\n\t    if (existing) {\n\t        closeEntry(existing);\n\t        entry.target = existing.target;\n\t    }\n\t    if (!entryKey || !(entryKey in fiery.entry)) {\n\t        entry.index = fiery.entryList.length;\n\t        fiery.entryList.push(entry);\n\t    }\n\t    if (entryKey) {\n\t        fiery.entry[entryKey] = entry;\n\t    }\n\t    if (property) {\n\t        fires[property] = source;\n\t    }\n\t    return entry;\n\t}\n\texports.getEntry = getEntry;\n\tfunction getEntryRecordFunctions(vm) {\n\t    return {\n\t        sync: function (fields) {\n\t            return operations.sync.call(vm, this, fields);\n\t        },\n\t        update: function (fields) {\n\t            return operations.update.call(vm, this, fields);\n\t        },\n\t        remove: function (excludeSubs) {\n\t            if (excludeSubs === void 0) { excludeSubs = false; }\n\t            return operations.remove.call(vm, this, excludeSubs);\n\t        },\n\t        ref: function (sub) {\n\t            return operations.ref.call(vm, this, sub);\n\t        },\n\t        clear: function (props) {\n\t            return operations.clear.call(vm, this, props);\n\t        },\n\t        getChanges: function (fieldsOrCallback, callbackOrEquality, equalityOrNothing) {\n\t            return operations.getChanges.call(vm, this, fieldsOrCallback, callbackOrEquality, equalityOrNothing);\n\t        }\n\t    };\n\t}\n\texports.getEntryRecordFunctions = getEntryRecordFunctions;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __assign = (this && this.__assign) || Object.assign || function(t) {\n\t    for (var s, i = 1, n = arguments.length; i < n; i++) {\n\t        s = arguments[i];\n\t        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n\t            t[p] = s[p];\n\t    }\n\t    return t;\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar constants_1 = __webpack_require__(4);\n\tvar util_1 = __webpack_require__(3);\n\texports.globalOptions = {\n\t    defined: {},\n\t    user: undefined,\n\t    defaults: {\n\t        onError: function (message) { },\n\t        onMissing: function () { },\n\t        onSuccess: function (results) { },\n\t        onRemove: function () { },\n\t        liveOptions: {},\n\t        propValue: constants_1.PROP_VALUE,\n\t        recordOptions: constants_1.RECORD_OPTIONS,\n\t        newDocument: function (encoded) { return ({}); }\n\t    },\n\t    id: 0,\n\t    map: {}\n\t};\n\tfunction getOptions(options, vm) {\n\t    // If a string is passed - returned a defined option.\n\t    if (typeof options === 'string') {\n\t        if (!(options in exports.globalOptions.defined)) {\n\t            throw 'The definition ' + options + ' was not found. You must call VueFiery.define before you use the definition';\n\t        }\n\t        // Ensure the defined option is properly populated\n\t        return getOptions(exports.globalOptions.defined[options]);\n\t    }\n\t    // If nothing was given, populate an empty set of options\n\t    if (!options || !util_1.isObject(options)) {\n\t        options = {};\n\t    }\n\t    // If the options was already populated, return the options\n\t    if (options.id && options.id in exports.globalOptions.map) {\n\t        return options;\n\t    }\n\t    // Otherwise, assign this options an id and add it to the list of options\n\t    else if (!options.id) {\n\t        options.id = ++exports.globalOptions.id;\n\t        exports.globalOptions.map[options.id] = options;\n\t    }\n\t    if (options.extends) {\n\t        performMerge(options, getOptions(options.extends));\n\t    }\n\t    performMerge(options, exports.globalOptions.user);\n\t    performMerge(options, exports.globalOptions.defaults);\n\t    if (vm && !options.shared) {\n\t        options.vm = vm;\n\t        vm.$fiery.options[options.id] = options;\n\t    }\n\t    if (options.type) {\n\t        var typeConstructor_1 = options.type;\n\t        options.newDocument = function (encoded) { return new typeConstructor_1(); };\n\t    }\n\t    if (!options.newCollection) {\n\t        options.newCollection = options.map\n\t            ? function () { return ({}); }\n\t            : function () { return []; };\n\t    }\n\t    if (!options.exclude) {\n\t        options.exclude = {};\n\t        if (options.key) {\n\t            options.exclude[options.key] = true;\n\t        }\n\t    }\n\t    else if (util_1.isArray(options.exclude)) {\n\t        var excludeArray = options.exclude;\n\t        options.exclude = {};\n\t        for (var i = 0; i < excludeArray.length; i++) {\n\t            options.exclude[excludeArray[i]] = true;\n\t        }\n\t    }\n\t    var excludeMap = options.exclude;\n\t    excludeMap[options.propValue] = true;\n\t    excludeMap[constants_1.PROP_UID] = true;\n\t    util_1.forEach(options.recordOptions, function (value, key) { return (excludeMap[value] = true); });\n\t    if (options.sub) {\n\t        for (var subProp in options.sub) {\n\t            var subOptionsInput = options.sub[subProp];\n\t            var subOptions = getOptions(subOptionsInput, vm);\n\t            subOptions.property = subProp;\n\t            subOptions.parent = options;\n\t            options.sub[subProp] = subOptions;\n\t            excludeMap[subProp] = true;\n\t        }\n\t    }\n\t    return options;\n\t}\n\texports.getOptions = getOptions;\n\tfunction define(nameOrMap, namedOptions) {\n\t    if (typeof nameOrMap === 'string') {\n\t        exports.globalOptions.defined[nameOrMap] = namedOptions;\n\t    }\n\t    else {\n\t        for (var name_1 in nameOrMap) {\n\t            exports.globalOptions.defined[name_1] = nameOrMap[name_1];\n\t        }\n\t    }\n\t}\n\texports.define = define;\n\tfunction setGlobalOptions(user) {\n\t    exports.globalOptions.user = user;\n\t}\n\texports.setGlobalOptions = setGlobalOptions;\n\tfunction performMerge(options, defaults) {\n\t    if (!defaults)\n\t        return;\n\t    for (var prop in exports.mergeOptions) {\n\t        var optionsProp = prop;\n\t        var merger = exports.mergeOptions[optionsProp];\n\t        options[optionsProp] = merger(options[optionsProp], defaults[optionsProp]);\n\t    }\n\t}\n\texports.performMerge = performMerge;\n\texports.mergeStrategy = {\n\t    ignore: function (options, defaults) {\n\t        return options;\n\t    },\n\t    replace: function (options, defaults) {\n\t        return util_1.coalesce(options, defaults);\n\t    },\n\t    chain: function (options, defaults) {\n\t        if (!util_1.isDefined(defaults))\n\t            return options;\n\t        if (!util_1.isDefined(options))\n\t            return defaults;\n\t        return function () {\n\t            defaults.apply(this, arguments)(options).apply(this, arguments);\n\t        };\n\t    },\n\t    shallow: function (options, defaults) {\n\t        if (!util_1.isDefined(defaults))\n\t            return options;\n\t        if (!util_1.isDefined(options))\n\t            return defaults;\n\t        return __assign({}, defaults, options);\n\t    },\n\t    concat: function (options, defaults) {\n\t        if (!util_1.isDefined(defaults))\n\t            return options;\n\t        if (!util_1.isDefined(options))\n\t            return defaults;\n\t        if (util_1.isArray(options) && util_1.isArray(defaults)) {\n\t            var union = options.concat(defaults);\n\t            var added = {};\n\t            for (var i = union.length - 1; i >= 0; i--) {\n\t                if (union[i] in added) {\n\t                    union.splice(i, 1);\n\t                }\n\t                else {\n\t                    added[union[i]] = true;\n\t                }\n\t            }\n\t            return union;\n\t        }\n\t    },\n\t    exclude: function (options, defaults) {\n\t        var union = exports.mergeStrategy.concat(options, defaults);\n\t        if (!union && options && defaults) {\n\t            var exclusions_1 = {};\n\t            var defaultsArray_1 = util_1.isArray(defaults);\n\t            var optionsArray_1 = util_1.isArray(options);\n\t            util_1.forEach(defaults, function (value, key) { return value ? (exclusions_1[defaultsArray_1 ? value : key] = true) : 0; });\n\t            util_1.forEach(options, function (value, key) { return value ? (exclusions_1[optionsArray_1 ? value : key] = true) : 0; });\n\t            return exclusions_1;\n\t        }\n\t    }\n\t};\n\texports.mergeOptions = {\n\t    extends: exports.mergeStrategy.ignore,\n\t    id: exports.mergeStrategy.ignore,\n\t    property: exports.mergeStrategy.ignore,\n\t    parent: exports.mergeStrategy.ignore,\n\t    shared: exports.mergeStrategy.ignore,\n\t    vm: exports.mergeStrategy.ignore,\n\t    key: exports.mergeStrategy.replace,\n\t    query: exports.mergeStrategy.replace,\n\t    map: exports.mergeStrategy.replace,\n\t    once: exports.mergeStrategy.replace,\n\t    reset: exports.mergeStrategy.replace,\n\t    type: exports.mergeStrategy.replace,\n\t    newDocument: exports.mergeStrategy.replace,\n\t    newCollection: exports.mergeStrategy.replace,\n\t    decode: exports.mergeStrategy.replace,\n\t    decoders: exports.mergeStrategy.shallow,\n\t    encoders: exports.mergeStrategy.shallow,\n\t    record: exports.mergeStrategy.replace,\n\t    recordOptions: exports.mergeStrategy.replace,\n\t    recordFunctions: exports.mergeStrategy.replace,\n\t    propValue: exports.mergeStrategy.replace,\n\t    onceOptions: exports.mergeStrategy.replace,\n\t    liveOptions: exports.mergeStrategy.replace,\n\t    include: exports.mergeStrategy.concat,\n\t    exclude: exports.mergeStrategy.exclude,\n\t    onError: exports.mergeStrategy.replace,\n\t    onSuccess: exports.mergeStrategy.replace,\n\t    onMissing: exports.mergeStrategy.replace,\n\t    onRemove: exports.mergeStrategy.replace,\n\t    sub: exports.mergeStrategy.shallow\n\t};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar documents_1 = __webpack_require__(8);\n\tvar util_1 = __webpack_require__(3);\n\tfunction update(data, fields) {\n\t    var _a = util_1.getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    if (store && path) {\n\t        var values = getValues(data, options, fields);\n\t        return store.doc(path).update(values);\n\t    }\n\t}\n\texports.update = update;\n\tfunction sync(data, fields) {\n\t    var _a = util_1.getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    if (store && path) {\n\t        var values = getValues(data, options, fields);\n\t        return store.doc(path).set(values);\n\t    }\n\t}\n\texports.sync = sync;\n\tfunction remove(data, excludeSubs) {\n\t    var _this = this;\n\t    if (excludeSubs === void 0) { excludeSubs = false; }\n\t    var _a = util_1.getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    if (store && path) {\n\t        if (!excludeSubs && options.sub) {\n\t            for (var subProp in options.sub) {\n\t                util_1.forEach(data[subProp], function (sub) {\n\t                    _this.remove(sub);\n\t                });\n\t            }\n\t        }\n\t        return store.doc(path).delete();\n\t    }\n\t}\n\texports.remove = remove;\n\tfunction clear(data, props) {\n\t    var _this = this;\n\t    var _a = util_1.getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    var propsArray = props instanceof Array ? props : [props];\n\t    if (store && path) {\n\t        var doc = store.doc(path);\n\t        var deleting = {};\n\t        var deleteCount = 0;\n\t        for (var _i = 0, propsArray_1 = propsArray; _i < propsArray_1.length; _i++) {\n\t            var prop = propsArray_1[_i];\n\t            if (options.sub && prop in options.sub && data[prop]) {\n\t                util_1.forEach(data[prop], function (sub) {\n\t                    _this.remove(sub);\n\t                });\n\t            }\n\t            else if (prop in data) {\n\t                var firebaseRuntime = store.app.firebase_;\n\t                if (firebaseRuntime) {\n\t                    deleting[prop] = firebaseRuntime.firestore.FieldValue.delete();\n\t                    deleteCount++;\n\t                }\n\t            }\n\t        }\n\t        if (deleteCount > 0) {\n\t            return doc.update(deleting);\n\t        }\n\t    }\n\t}\n\texports.clear = clear;\n\tfunction getChanges(data, fieldsOrCallback, callbackOrEquality, equalityOrNothing) {\n\t    var _a = util_1.getMetadata(this, data), store = _a.store, path = _a.path, options = _a.options;\n\t    var fields = typeof fieldsOrCallback === 'string' ? fieldsOrCallback : undefined;\n\t    var callback = (fields ? callbackOrEquality : fieldsOrCallback);\n\t    var equality = ((fields ? equalityOrNothing : callbackOrEquality) || util_1.isEqual);\n\t    if (store && path) {\n\t        var current_1 = getValues(data, options, fields);\n\t        return store.doc(path).get().then(function (doc) {\n\t            var encoded = documents_1.parseDocument(doc, options);\n\t            var updated = {};\n\t            var old = {};\n\t            var changes = false;\n\t            for (var prop in current_1) {\n\t                var valueUpdated = encoded[prop];\n\t                var valueOld = current_1[prop];\n\t                if (!equality(valueOld, valueUpdated)) {\n\t                    changes = true;\n\t                    updated[prop] = valueUpdated;\n\t                    old[prop] = valueOld;\n\t                }\n\t            }\n\t            callback(changes, updated, old);\n\t        });\n\t    }\n\t}\n\texports.getChanges = getChanges;\n\tfunction ref(data, sub) {\n\t    var _a = util_1.getMetadata(this, data), store = _a.store, path = _a.path;\n\t    if (store && path) {\n\t        var doc = store.doc(path);\n\t        return sub ? doc.collection(sub) : doc;\n\t    }\n\t}\n\texports.ref = ref;\n\tfunction getValues(data, options, fields) {\n\t    var explicit = fields || options.include;\n\t    var values = {};\n\t    if (explicit) {\n\t        for (var i = 0; i < explicit.length; i++) {\n\t            var prop = explicit[i];\n\t            if (prop in data) {\n\t                values[prop] = data[prop];\n\t            }\n\t        }\n\t    }\n\t    else {\n\t        for (var prop in data) {\n\t            if (!(prop in options.exclude)) {\n\t                values[prop] = data[prop];\n\t            }\n\t        }\n\t    }\n\t    if (options.encoders) {\n\t        for (var prop in options.encoders) {\n\t            if (prop in values) {\n\t                values[prop] = options.encoders[prop](values[prop], data);\n\t            }\n\t        }\n\t    }\n\t    return values;\n\t}\n\texports.getValues = getValues;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar constants_1 = __webpack_require__(4);\n\tvar util_1 = __webpack_require__(3);\n\tvar entry_1 = __webpack_require__(5);\n\tvar factory_1 = __webpack_require__(9);\n\tfunction decodeDocument(encoded, options) {\n\t    if (options.decode) {\n\t        encoded = options.decode(encoded);\n\t    }\n\t    else if (options.decoders) {\n\t        for (var prop in options.decoders) {\n\t            if (prop in encoded) {\n\t                encoded[prop] = options.decoders[prop](encoded[prop], encoded);\n\t            }\n\t        }\n\t    }\n\t    return encoded;\n\t}\n\texports.decodeDocument = decodeDocument;\n\tfunction parseDocument(doc, options) {\n\t    var _a;\n\t    var value = doc.data();\n\t    var out = (util_1.isObject(value) ? value : (_a = {}, _a[options.propValue] = value, _a));\n\t    if (out && options.key) {\n\t        out[options.key] = doc.id;\n\t    }\n\t    return out;\n\t}\n\texports.parseDocument = parseDocument;\n\tfunction refreshDocument(vm, entry, doc, data) {\n\t    var options = entry.options;\n\t    var property = options.property;\n\t    var replace = !!(options.reset && property);\n\t    var encoded = parseDocument(doc, options);\n\t    var decoded = decodeDocument(encoded, options);\n\t    if (!data) {\n\t        var identifier = getDocumentIdentifier(vm, options, doc);\n\t        data = options.newDocument(decoded);\n\t        data[constants_1.PROP_UID] = identifier;\n\t        copyData(vm, data, decoded);\n\t        util_1.createRecord(data, entry);\n\t        if (options.sub) {\n\t            for (var subProp in options.sub) {\n\t                var subOptions = options.sub[subProp];\n\t                var subEntryKey = doc.ref.path + constants_1.ENTRY_SEPARATOR + subProp;\n\t                var subEntry = entry_1.getEntry(vm, doc.ref.collection(subProp), subOptions, subEntryKey, true);\n\t                data[subProp] = factory_1.factory(vm, subEntry);\n\t            }\n\t        }\n\t    }\n\t    else if (replace) {\n\t        var replaced = options.newDocument(decoded);\n\t        if (options.sub) {\n\t            for (var subProp in options.sub) {\n\t                if (data[subProp]) {\n\t                    replaced[subProp] = data[subProp];\n\t                }\n\t            }\n\t        }\n\t        util_1.createRecord(replaced, entry);\n\t        data = copyData(vm, replaced, decoded);\n\t    }\n\t    else {\n\t        copyData(vm, data, decoded);\n\t    }\n\t    return data;\n\t}\n\texports.refreshDocument = refreshDocument;\n\tfunction copyData(vm, data, update) {\n\t    for (var prop in update) {\n\t        vm.$set(data, prop, update[prop]);\n\t    }\n\t    return data;\n\t}\n\texports.copyData = copyData;\n\tfunction destroyDocuments(vm, map, fromObject) {\n\t    for (var id in map) {\n\t        var old = map[id];\n\t        destroyDocument(vm, old);\n\t        if (fromObject) {\n\t            vm.$delete(fromObject, id);\n\t        }\n\t    }\n\t}\n\texports.destroyDocuments = destroyDocuments;\n\tfunction destroyDocument(vm, data) {\n\t    var _a = util_1.getMetadata(vm, data), path = _a.path, options = _a.options;\n\t    if (options.sub) {\n\t        var fiery = vm.$fiery;\n\t        for (var subProp in options.sub) {\n\t            var subEntryKey = path + constants_1.ENTRY_SEPARATOR + subProp;\n\t            var subEntry = fiery.entry[subEntryKey];\n\t            if (subEntry) {\n\t                entry_1.closeEntry(subEntry);\n\t                delete fiery.entry[subEntryKey];\n\t                if (typeof subEntry.index === 'number') {\n\t                    fiery.entryList[subEntry.index] = null;\n\t                    delete subEntry.index;\n\t                }\n\t            }\n\t            util_1.forEach(data[subProp], function (value) {\n\t                destroyDocument(vm, value);\n\t            });\n\t        }\n\t    }\n\t}\n\texports.destroyDocument = destroyDocument;\n\tfunction getDocumentIdentifier(vm, options, doc) {\n\t    return getStoreKey(vm, doc) +\n\t        constants_1.UID_SEPARATOR +\n\t        options.id +\n\t        constants_1.UID_SEPARATOR +\n\t        doc.ref.path;\n\t}\n\texports.getDocumentIdentifier = getDocumentIdentifier;\n\tfunction getStoreKey(vm, doc) {\n\t    var firestore = doc._firestore;\n\t    var db = firestore._databaseId;\n\t    var id = db.database + constants_1.STORE_SEPARATOR + db.projectId;\n\t    var fiery = vm.$fiery;\n\t    var key = fiery.storeIdToKey[id];\n\t    if (!key) {\n\t        key = ++fiery.storeKeyNext;\n\t        fiery.stores[key] = firestore;\n\t        fiery.storeIdToKey[id] = key;\n\t    }\n\t    return key;\n\t}\n\texports.getStoreKey = getStoreKey;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar entry_1 = __webpack_require__(5);\n\tvar document_1 = __webpack_require__(10);\n\tvar map_1 = __webpack_require__(11);\n\tvar collection_1 = __webpack_require__(12);\n\tfunction factory(vm, entry) {\n\t    var chosenFactory = entry.source.where\n\t        ? (entry.options.map ? map_1.default : collection_1.default)\n\t        : document_1.default;\n\t    return chosenFactory(vm, entry);\n\t}\n\texports.factory = factory;\n\tfunction factoryInstance(vm) {\n\t    return function (source, options) {\n\t        return factory(vm, entry_1.getEntry(vm, source, options));\n\t    };\n\t}\n\texports.factoryInstance = factoryInstance;\n\texports.default = factory;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar documents_1 = __webpack_require__(8);\n\tfunction factory(vm, entry) {\n\t    var source = entry.source;\n\t    var options = entry.options;\n\t    if (options.once) {\n\t        entry.promise = source.get(options.onceOptions)\n\t            .then(function (doc) {\n\t            handleDocumentUpdate(vm, entry, doc);\n\t        }).catch(options.onError);\n\t    }\n\t    else {\n\t        entry.off = source.onSnapshot(options.liveOptions, function (doc) {\n\t            handleDocumentUpdate(vm, entry, doc);\n\t        }, options.onError);\n\t    }\n\t    return entry.target;\n\t}\n\texports.factory = factory;\n\tfunction handleDocumentUpdate(vm, entry, doc) {\n\t    var options = entry.options;\n\t    if (!doc.exists) {\n\t        options.onMissing();\n\t    }\n\t    else {\n\t        entry.target = documents_1.refreshDocument(vm, entry, doc, entry.target);\n\t        if (options.reset && options.property) {\n\t            vm[options.property] = entry.target;\n\t        }\n\t        options.onSuccess(entry.target);\n\t    }\n\t}\n\texports.handleDocumentUpdate = handleDocumentUpdate;\n\texports.default = factory;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar documents_1 = __webpack_require__(8);\n\tfunction factory(vm, entry) {\n\t    var options = entry.options;\n\t    var query = (options.query ? options.query(entry.source) : entry.source);\n\t    if (options.once) {\n\t        entry.promise = query.get(options.onceOptions)\n\t            .then(function (querySnapshot) {\n\t            var target = entry.target;\n\t            var missing = {};\n\t            for (var id in target) {\n\t                missing[id] = target[id];\n\t            }\n\t            querySnapshot.forEach(function (doc) {\n\t                var old = target[doc.id];\n\t                var updated = documents_1.refreshDocument(vm, entry, doc, old);\n\t                vm.$set(target, doc.id, updated);\n\t                delete missing[doc.id];\n\t            }, options.onError);\n\t            documents_1.destroyDocuments(vm, missing, target);\n\t            options.onSuccess(target);\n\t        }).catch(options.onError);\n\t    }\n\t    else {\n\t        entry.off = query.onSnapshot(options.liveOptions, function (querySnapshot) {\n\t            var target = entry.target;\n\t            querySnapshot.docChanges().forEach(function (change) {\n\t                var doc = change.doc;\n\t                switch (change.type) {\n\t                    case 'modified':\n\t                    case 'added':\n\t                        var old = target[doc.id];\n\t                        var updated = documents_1.refreshDocument(vm, entry, doc, old);\n\t                        vm.$set(target, doc.id, updated);\n\t                        break;\n\t                    case 'removed':\n\t                        documents_1.destroyDocument(vm, target[doc.id]);\n\t                        vm.$delete(target, doc.id);\n\t                        break;\n\t                }\n\t            }, options.onError);\n\t            options.onSuccess(target);\n\t        }, options.onError);\n\t    }\n\t    return entry.target;\n\t}\n\texports.default = factory;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar constants_1 = __webpack_require__(4);\n\tvar documents_1 = __webpack_require__(8);\n\tfunction factory(vm, entry) {\n\t    var options = entry.options;\n\t    var query = (options.query ? options.query(entry.source) : entry.source);\n\t    if (options.once) {\n\t        entry.promise = query.get(options.onceOptions)\n\t            .then(function (querySnapshot) {\n\t            var target = entry.target;\n\t            var missing = {};\n\t            for (var i = 0; i < target.length; i++) {\n\t                var old = target[i];\n\t                missing[old[constants_1.PROP_UID]] = old;\n\t            }\n\t            target.splice(0, target.length);\n\t            querySnapshot.forEach(function (doc) {\n\t                var old = missing[doc.id];\n\t                var updated = documents_1.refreshDocument(vm, entry, doc, old);\n\t                target.push(updated);\n\t                delete missing[updated[constants_1.PROP_UID]];\n\t            }, options.onError);\n\t            documents_1.destroyDocuments(vm, missing);\n\t            options.onSuccess(target);\n\t        }).catch(options.onError);\n\t    }\n\t    else {\n\t        entry.off = query.onSnapshot(options.liveOptions, function (querySnapshot) {\n\t            var target = entry.target;\n\t            querySnapshot.docChanges().forEach(function (change) {\n\t                var doc = change.doc;\n\t                switch (change.type) {\n\t                    case 'added':\n\t                        var created = documents_1.refreshDocument(vm, entry, doc);\n\t                        target.splice(change.newIndex, 0, created);\n\t                        break;\n\t                    case 'removed':\n\t                        target.splice(change.oldIndex, 1);\n\t                        break;\n\t                    case 'modified':\n\t                        var old = target[change.oldIndex];\n\t                        var updated = documents_1.refreshDocument(vm, entry, doc, old);\n\t                        if (change.oldIndex !== change.newIndex) {\n\t                            target.splice(change.oldIndex, 1);\n\t                            target.splice(change.newIndex, 0, updated);\n\t                        }\n\t                        else {\n\t                            target.splice(change.newIndex, 1, updated);\n\t                        }\n\t                        break;\n\t                }\n\t            }, options.onError);\n\t            options.onSuccess(target);\n\t        }, options.onError);\n\t    }\n\t    return entry.target;\n\t}\n\texports.factory = factory;\n\texports.default = factory;\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// vue-fiery.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bacfd7a3cd0151c0ea73","import VueFiery from './plugin'\n\nexport default VueFiery\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","\nimport { init, link, destroy } from './mixin'\nimport { setGlobalOptions, define, mergeStrategy, mergeOptions } from './options'\n\nexport const plugin =\n{\n  mergeOptions,\n\n  mergeStrategy,\n\n  define,\n\n  setGlobalOptions,\n\n  install (Vue: any)\n  {\n    Vue.mixin({\n      beforeCreate: init,\n      created: link,\n      beforeDestroy: destroy\n    })\n  }\n}\n\nif (typeof window !== 'undefined' && (<any>window).Vue)\n{\n  (<any>window).Vue.use(plugin)\n}\n\nexport default plugin\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugin.ts","\n\nimport { FieryVue, FieryInstance, FieryInstanceFactory, FieryTarget, FierySource, FieryOptions, FieryEntry } from './types'\nimport { getMetadata, forEach } from './util'\nimport { getEntry, closeEntry } from './entry'\nimport { globalOptions } from './options'\nimport { factoryInstance } from './factory'\nimport * as operations from './operations'\n\n\n\n\nexport function init (this: FieryVue): void\n{\n  this.$fiery = factoryInstance(this) as FieryInstance\n  this.$fiery.stores = {}\n  this.$fiery.storeKeyNext = 0\n  this.$fiery.storeIdToKey = {}\n  this.$fiery.entry = {}\n  this.$fiery.entryList = []\n  this.$fiery.options = {}\n  this.$fiery.update = operations.update.bind(this)\n  this.$fiery.sync = operations.sync.bind(this)\n  this.$fiery.remove = operations.remove.bind(this)\n  this.$fiery.clear = operations.clear.bind(this)\n  this.$fiery.getChanges = operations.getChanges.bind(this)\n  this.$fiery.ref = operations.ref.bind(this)\n  this.$fiery.link = link.bind(this)\n  this.$fiery.destroy = destroy.bind(this)\n  this.$fiery.getMetadata = (data) => getMetadata(this, data)\n  this.$fires = {}\n}\n\nexport function destroy (this: FieryVue): void\n{\n  forEach(this.$fiery.options, opt => delete globalOptions.map[opt.id])\n\n  this.$fiery.stores = {}\n  this.$fiery.entry = {}\n  this.$fiery.entryList.forEach(closeEntry)\n  this.$fiery.entryList = []\n  this.$fiery.options = {}\n  this.$fiery = <any>(() => {}) as FieryInstance\n  this.$fires = {}\n}\n\nexport function link (this: FieryVue): void\n{\n  const entryList: (FieryEntry | null)[] = this.$fiery.entryList\n\n  for (let i = 0; i < entryList.length; i++)\n  {\n    const entry: FieryEntry | null = entryList[i]\n\n    if (entry === null)\n    {\n      continue\n    }\n\n    const options: FieryOptions = entry.options\n\n    if (!options.parent && !options.property)\n    {\n      for (let prop in this)\n      {\n        if (this[prop] === entry.target)\n        {\n          options.property = prop\n\n          this.$fiery.entry[ prop ] = entry\n          this.$fires[ prop ] = entry.source\n\n          break\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixin.ts","\nimport * as firebase from 'firebase'\n\n\nimport { PROP_UID, UID_SEPARATOR } from './constants'\nimport { FieryOptions, FierySource, FieryVue, FieryData, FieryMetadata, FieryEntry } from './types'\n\n\ntype Firestore = firebase.firestore.Firestore\n\n\n\nexport function isObject (x?: any): boolean\n{\n  return Object.prototype.toString.call(x) === '[object Object]'\n}\n\nexport function isFunction (x?: any): boolean\n{\n  return typeof x === 'function'\n}\n\nexport function isArray (x?: any): boolean\n{\n  return x && x instanceof Array\n}\n\nexport function isDefined (x?: any): boolean\n{\n  return typeof x !== 'undefined'\n}\n\nexport function coalesce (a?: any, b?: any): any\n{\n  return isDefined(a) ? a : b\n}\n\nexport function isCollectionSource (source: FierySource): boolean\n{\n  return !!((<any>source).where)\n}\n\nexport function forEach (iterable: any, callback: (item: any, key?: number | string, iterable?: any) => any): boolean\n{\n  if (isArray(iterable))\n  {\n    for (let i = 0; i < iterable.length; i++)\n    {\n      callback(iterable[i], i, iterable)\n    }\n\n    return true\n  }\n  else if (isObject(iterable))\n  {\n    for (let prop in iterable)\n    {\n      callback(iterable[prop], prop, iterable)\n    }\n\n    return true\n  }\n\n  return false\n}\n\nexport function getMetadata (vm: FieryVue, data: FieryData): FieryMetadata\n{\n  const uid: string = data[PROP_UID]\n  const [storeKey, optionKey, path] = uid.split(UID_SEPARATOR) as string[]\n  const store: Firestore = vm.$fiery.stores[parseInt(storeKey)]\n  const options: FieryOptions = vm.$fiery.options[parseInt(optionKey)]\n\n  return { uid, path, storeKey, store, optionKey, options }\n}\n\nexport function createRecord (data: FieryData, entry: FieryEntry): FieryData\n{\n  const options: FieryOptions = entry.options\n\n  if (options.record)\n  {\n    let recordOptions = options.recordOptions\n    let recordFunctions = entry.recordFunctions\n\n    if (recordOptions.sync) data[recordOptions.sync] = recordFunctions.sync\n    if (recordOptions.update) data[recordOptions.update] = recordFunctions.update\n    if (recordOptions.remove) data[recordOptions.remove] = recordFunctions.remove\n    if (recordOptions.clear) data[recordOptions.clear] = recordFunctions.clear\n    if (recordOptions.getChanges) data[recordOptions.getChanges] = recordFunctions.getChanges\n    if (recordOptions.ref) data[recordOptions.ref] = recordFunctions.ref\n  }\n\n  return data\n}\n\nexport function isEqual(a: any, b: any): boolean\n{\n  if (a === b)\n  {\n    return true\n  }\n\n  if (!a || !b)\n  {\n    return false\n  }\n\n  if (isArray(a) && isArray(b))\n  {\n    if (a.length !== b.length)\n    {\n      return false\n    }\n\n    for (let i = 0; i < a.length; i++)\n    {\n      if (!isEqual(a[i], b[i]))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (isObject(a) && isObject(b))\n  {\n    for (let prop in a)\n    {\n      if (!isEqual(a[prop], b[prop]))\n      {\n        return false\n      }\n    }\n\n    for (let prop in b)\n    {\n      if (!(prop in a))\n      {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  return false\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.ts","\nexport const PROP_VALUE = '.value'\nexport const PROP_UID = '.uid'\nexport const UID_SEPARATOR = '///'\nexport const ENTRY_SEPARATOR = '/'\nexport const STORE_SEPARATOR = '/'\nexport const RECORD_OPTIONS = {\n  sync: '$sync',\n  update: '$update',\n  remove: '$remove',\n  ref: '$ref',\n  clear: '$clear',\n  getChanges: '$getChanges'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.ts","\n\nimport { FieryOptions, FieryInstance, FieryTarget, FieryEntry, FierySources, FieryVue, FierySource, FieryData, FieryChangesCallback, FieryEquality } from './types'\nimport { isCollectionSource } from './util'\nimport { getOptions } from './options'\nimport * as operations from './operations'\n\n\nexport function closeEntry (entry: FieryEntry): void\n{\n  if (entry && entry.off)\n  {\n    entry.off()\n\n    delete entry.off\n  }\n}\n\nexport function getEntry (vm: FieryVue, source: FierySource, optionsInput?: string | Partial<FieryOptions>, entryKeyInput?: string, useRawOptions: boolean = false)\n{\n  const options: FieryOptions = useRawOptions\n    ? optionsInput as FieryOptions\n    : getOptions(optionsInput, vm)\n  const target: FieryTarget = isCollectionSource(source)\n    ? options.newCollection()\n    : options.newDocument()\n  const recordFunctions = getEntryRecordFunctions(vm)\n  const property: string | undefined = options.property\n  const entryKey: string = entryKeyInput || property || ''\n  const fiery: FieryInstance = vm.$fiery\n  const fires: FierySources = vm.$fires\n\n  let existing: FieryEntry | undefined = fiery.entry[ entryKey ]\n  let children = {}\n  let entry: FieryEntry = { source, options, target, children, recordFunctions }\n\n  if (existing)\n  {\n    closeEntry(existing)\n\n    entry.target = existing.target\n  }\n\n  if (!entryKey || !(entryKey in fiery.entry))\n  {\n    entry.index = fiery.entryList.length\n\n    fiery.entryList.push(entry)\n  }\n\n  if (entryKey)\n  {\n    fiery.entry[ entryKey ] = entry\n  }\n\n  if (property)\n  {\n    fires[ property ] = source\n  }\n\n  return entry\n}\n\nexport function getEntryRecordFunctions(vm: FieryVue)\n{\n  return {\n    sync: function(this: FieryData, fields?: string[]) {\n      return operations.sync.call(vm, this, fields)\n    },\n    update: function(this: FieryData, fields?: string[]) {\n      return operations.update.call(vm, this, fields)\n    },\n    remove: function(this: FieryData, excludeSubs: boolean = false) {\n      return operations.remove.call(vm, this, excludeSubs)\n    },\n    ref: function(this: FieryData, sub?: string) {\n      return operations.ref.call(vm, this, sub)\n    },\n    clear: function(this: FieryData, props: string | string[]) {\n      return operations.clear.call(vm, this, props)\n    },\n    getChanges: function(this: FieryData,\n      fieldsOrCallback: string[] | FieryChangesCallback,\n      callbackOrEquality?: FieryChangesCallback | FieryEquality,\n      equalityOrNothing?: FieryEquality) {\n      return operations.getChanges.call(vm, this, fieldsOrCallback, callbackOrEquality, equalityOrNothing)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/entry.ts","\n\n\nimport { PROP_UID, PROP_VALUE, RECORD_OPTIONS } from './constants'\nimport { FieryOptions, FieryOptionsMap, FieryInstance, FieryVue, FieryExclusions, FierySource, FieryData, FieryMap, FieryChangesCallback, FieryEquality, FieryMergeStrategy, FieryMergeStrategies } from './types'\nimport { isObject, isFunction, isArray, coalesce, forEach, isDefined } from './util'\nimport * as operations from './operations'\n\n\nexport const globalOptions =\n{\n  defined: {} as FieryOptionsMap,\n\n  user: undefined as Partial<FieryOptions> | undefined,\n\n  defaults:\n  {\n    onError: (message: any) => {},\n    onMissing: () => {},\n    onSuccess: (results: any) => {},\n    onRemove: () => {},\n    liveOptions: {},\n    propValue: PROP_VALUE,\n    recordOptions: RECORD_OPTIONS,\n    newDocument: (encoded?: FieryData) => ({} as FieryData)\n\n  } as Partial<FieryOptions>,\n\n  id: 0,\n\n  map: {} as FieryOptionsMap\n}\n\n\nexport function getOptions (options?: string | Partial<FieryOptions>, vm?: FieryVue): FieryOptions\n{\n  // If a string is passed - returned a defined option.\n  if (typeof options === 'string')\n  {\n    if (!(options in globalOptions.defined))\n    {\n      throw 'The definition ' + options + ' was not found. You must call VueFiery.define before you use the definition'\n    }\n\n    // Ensure the defined option is properly populated\n    return getOptions(globalOptions.defined[options])\n  }\n\n  // If nothing was given, populate an empty set of options\n  if (!options || !isObject(options))\n  {\n    options = {}\n  }\n\n  // If the options was already populated, return the options\n  if (options.id && options.id in globalOptions.map)\n  {\n    return options as FieryOptions\n  }\n  // Otherwise, assign this options an id and add it to the list of options\n  else if (!options.id)\n  {\n    options.id = ++globalOptions.id\n    globalOptions.map[options.id] = options as FieryOptions\n  }\n\n  if (options.extends)\n  {\n    performMerge(options, getOptions(options.extends))\n  }\n\n  performMerge(options, globalOptions.user)\n  performMerge(options, globalOptions.defaults)\n\n  if (vm && !options.shared)\n  {\n    options.vm = vm\n    vm.$fiery.options[ options.id ] = options as FieryOptions\n  }\n\n  if (options.type)\n  {\n    let typeConstructor = options.type\n\n    options.newDocument = (encoded?: FieryData) => (new typeConstructor() as FieryData)\n  }\n\n  if (!options.newCollection)\n  {\n    options.newCollection = options.map\n      ? () => ({} as FieryMap)\n      : () => ([] as FieryData[])\n  }\n\n  if (!options.exclude)\n  {\n    options.exclude = {}\n\n    if (options.key)\n    {\n      options.exclude[options.key] = true\n    }\n  }\n  else if (isArray(options.exclude))\n  {\n    let excludeArray = options.exclude as string[]\n\n    options.exclude = {}\n\n    for (let i = 0; i < excludeArray.length; i++)\n    {\n      options.exclude[excludeArray[i]] = true\n    }\n  }\n\n  let excludeMap: FieryExclusions = options.exclude as FieryExclusions\n\n  excludeMap[options.propValue as string] = true\n  excludeMap[PROP_UID] = true\n\n  forEach(options.recordOptions, (value, key) => (excludeMap[value] = true))\n\n  if (options.sub)\n  {\n    for (let subProp in options.sub)\n    {\n      let subOptionsInput = options.sub[subProp] as Partial<FieryOptions>\n      let subOptions = getOptions(subOptionsInput, vm)\n\n      subOptions.property = subProp\n      subOptions.parent = options as FieryOptions\n\n      options.sub[subProp] = subOptions\n      excludeMap[subProp] = true\n    }\n  }\n\n  return options as FieryOptions\n}\n\n\nexport function define (nameOrMap: string | FieryOptionsMap, namedOptions?: Partial<FieryOptions>): void\n{\n  if (typeof nameOrMap === 'string')\n  {\n    globalOptions.defined[nameOrMap] = namedOptions as Partial<FieryOptions>\n  }\n  else\n  {\n    for (let name in nameOrMap)\n    {\n      globalOptions.defined[name] = nameOrMap[name]\n    }\n  }\n}\n\nexport function setGlobalOptions (user?: Partial<FieryOptions>): void\n{\n  globalOptions.user = user\n}\n\nexport function performMerge (options: Partial<FieryOptions>, defaults?: Partial<FieryOptions>): void\n{\n  if (!defaults) return\n\n  for (let prop in mergeOptions)\n  {\n    const optionsProp = prop as keyof FieryOptions\n    const merger: FieryMergeStrategy = mergeOptions[optionsProp]\n\n    options[optionsProp] = merger( options[optionsProp], defaults[optionsProp] )\n  }\n}\n\nexport const mergeStrategy: FieryMergeStrategies =\n{\n  ignore (options: any, defaults: any): any {\n    return options\n  },\n  replace (options: any, defaults: any): any {\n    return coalesce(options, defaults)\n  },\n  chain (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return function(this: any) {\n      (defaults as Function).apply(this, arguments)\n      (options as Function).apply(this, arguments)\n    }\n  },\n  shallow (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    return {\n      ...defaults,\n      ...options\n    }\n  },\n  concat (options: any, defaults: any): any {\n    if (!isDefined(defaults)) return options\n    if (!isDefined(options)) return defaults\n\n    if (isArray(options) && isArray(defaults)) {\n      let union = options.concat(defaults)\n      let added: {[k:string]:any} = {}\n      for (let i = union.length - 1; i >= 0; i--) {\n        if (union[i] in added) {\n          union.splice(i, 1)\n        } else {\n          added[union[i]] = true\n        }\n      }\n      return union\n    }\n  },\n  exclude (options: any, defaults: any): any {\n    let union = mergeStrategy.concat(options, defaults)\n    if (!union && options && defaults) {\n      let exclusions: {[k:string]:any} = {}\n      let defaultsArray = isArray(defaults)\n      let optionsArray = isArray(options)\n      forEach(defaults, (value, key) => value ? (exclusions[defaultsArray ? value : key] = true) : 0)\n      forEach(options, (value, key) => value ? (exclusions[optionsArray ? value : key] = true) : 0)\n      return exclusions\n    }\n  }\n}\n\nexport const mergeOptions: FieryMergeStrategies =\n{\n  extends:            mergeStrategy.ignore,\n  id:                 mergeStrategy.ignore,\n  property:           mergeStrategy.ignore,\n  parent:             mergeStrategy.ignore,\n  shared:             mergeStrategy.ignore,\n  vm:                 mergeStrategy.ignore,\n  key:                mergeStrategy.replace,\n  query:              mergeStrategy.replace,\n  map:                mergeStrategy.replace,\n  once:               mergeStrategy.replace,\n  reset:              mergeStrategy.replace,\n  type:               mergeStrategy.replace,\n  newDocument:        mergeStrategy.replace,\n  newCollection:      mergeStrategy.replace,\n  decode:             mergeStrategy.replace,\n  decoders:           mergeStrategy.shallow,\n  encoders:           mergeStrategy.shallow,\n  record:             mergeStrategy.replace,\n  recordOptions:      mergeStrategy.replace,\n  recordFunctions:    mergeStrategy.replace,\n  propValue:          mergeStrategy.replace,\n  onceOptions:        mergeStrategy.replace,\n  liveOptions:        mergeStrategy.replace,\n  include:            mergeStrategy.concat,\n  exclude:            mergeStrategy.exclude,\n  onError:            mergeStrategy.replace,\n  onSuccess:          mergeStrategy.replace,\n  onMissing:          mergeStrategy.replace,\n  onRemove:           mergeStrategy.replace,\n  sub:                mergeStrategy.shallow\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/options.ts","\nimport { FieryVue, FieryOptions, FieryEntry, FieryData, FierySource, FieryChangesCallback, FieryEquality } from './types'\nimport { parseDocument } from './documents'\nimport { getMetadata, forEach, isEqual } from './util'\n\n\n\nexport function update (this: FieryVue, data: FieryData, fields?: string[]): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    const values: FieryData = getValues(data, options, fields)\n\n    return store.doc(path).update(values)\n  }\n}\n\nexport function sync (this: FieryVue, data: FieryData, fields?: string[]): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    const values = getValues(data, options, fields)\n\n    return store.doc(path).set(values)\n  }\n}\n\nexport function remove (this: FieryVue, data: FieryData, excludeSubs: boolean = false): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    if (!excludeSubs && options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        forEach(data[subProp], (sub) =>\n        {\n          this.remove(sub as FieryData)\n        })\n      }\n    }\n\n    return store.doc(path).delete()\n  }\n}\n\nexport function clear (this: FieryVue, data: FieryData, props: string | string[]): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n  const propsArray: string[] = props instanceof Array ? props : [props]\n\n  if (store && path)\n  {\n    const doc = store.doc(path)\n    const deleting: any = {}\n    let deleteCount: number = 0\n\n    for (let prop of propsArray)\n    {\n      if (options.sub && prop in options.sub && data[prop])\n      {\n        forEach(data[prop], (sub) =>\n        {\n          this.remove(sub as FieryData)\n        })\n      }\n      else if (prop in data)\n      {\n        let firebaseRuntime: any = (<any>store.app).firebase_\n\n        if (firebaseRuntime)\n        {\n          deleting[prop] = firebaseRuntime.firestore.FieldValue.delete()\n          deleteCount++\n        }\n      }\n    }\n\n    if (deleteCount > 0)\n    {\n      return doc.update(deleting)\n    }\n  }\n}\n\nexport function getChanges (this: FieryVue, data: FieryData,\n  fieldsOrCallback: string[] | FieryChangesCallback,\n  callbackOrEquality?: FieryChangesCallback | FieryEquality,\n  equalityOrNothing?: FieryEquality): Promise<void> | undefined\n{\n  const { store, path, options } = getMetadata(this, data)\n  const fields: string[] | undefined = typeof fieldsOrCallback === 'string' ? fieldsOrCallback as string[] : undefined\n  const callback: FieryChangesCallback = (fields ? callbackOrEquality : fieldsOrCallback) as FieryChangesCallback\n  const equality: FieryEquality = ((fields ? equalityOrNothing : callbackOrEquality) || isEqual) as FieryEquality\n\n  if (store && path)\n  {\n    const current: FieryData = getValues(data, options, fields)\n\n    return store.doc(path).get().then((doc) =>\n    {\n      const encoded: FieryData = parseDocument(doc, options)\n      const updated: FieryData = {}\n      const old: FieryData = {}\n      let changes = false\n\n      for (let prop in current)\n      {\n        let valueUpdated = encoded[prop]\n        let valueOld = current[prop]\n\n        if (!equality(valueOld, valueUpdated))\n        {\n          changes = true\n          updated[prop] = valueUpdated\n          old[prop] = valueOld\n        }\n      }\n\n      callback(changes, updated, old)\n    })\n  }\n}\n\nexport function ref (this: FieryVue, data: FieryData, sub?: string): FierySource | undefined\n{\n  const { store, path } = getMetadata(this, data)\n\n  if (store && path)\n  {\n    let doc = store.doc(path)\n\n    return sub ? doc.collection(sub) : doc\n  }\n}\n\nexport function getValues (data: FieryData, options: FieryOptions, fields?: string[]): FieryData\n{\n  const explicit: string[] = fields || options.include\n  const values: FieryData = {}\n\n  if (explicit)\n  {\n    for (let i = 0; i < explicit.length; i++)\n    {\n      let prop: string = explicit[i]\n\n      if (prop in data)\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n  else\n  {\n    for (let prop in data)\n    {\n      if (!(prop in options.exclude))\n      {\n        values[prop] = data[prop]\n      }\n    }\n  }\n\n  if (options.encoders)\n  {\n    for (let prop in options.encoders)\n    {\n      if (prop in values)\n      {\n        values[prop] = options.encoders[prop](values[prop], data)\n      }\n    }\n  }\n\n  return values\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/operations.ts","\nimport * as firebase from 'firebase'\n\n\n\nimport { PROP_UID, UID_SEPARATOR, STORE_SEPARATOR, ENTRY_SEPARATOR } from './constants'\nimport { FieryOptions, FieryInstance, FieryEntry, FieryData, FieryMap, FieryVue } from './types'\nimport { isObject, forEach, getMetadata, createRecord } from './util'\nimport { closeEntry, getEntry } from './entry'\nimport { factory } from './factory'\n\n\n\ntype DocumentSnapshot = firebase.firestore.DocumentSnapshot\ntype Firestore = firebase.firestore.Firestore\n\n\n\nexport function decodeDocument(encoded: FieryData, options: FieryOptions): FieryData\n{\n  if (options.decode)\n  {\n    encoded = options.decode(encoded)\n  }\n  else if (options.decoders)\n  {\n    for (let prop in options.decoders)\n    {\n      if (prop in encoded)\n      {\n        encoded[prop] = options.decoders[prop](encoded[prop], encoded)\n      }\n    }\n  }\n\n  return encoded\n}\n\nexport function parseDocument (doc: DocumentSnapshot, options: FieryOptions): FieryData\n{\n  let value = doc.data()\n  let out = (isObject(value) ? value : { [options.propValue]: value }) as FieryData\n\n  if (out && options.key)\n  {\n    out[options.key] = doc.id\n  }\n\n  return out\n}\n\nexport function refreshDocument (vm: FieryVue, entry: FieryEntry, doc: DocumentSnapshot, data?: FieryData): FieryData\n{\n  const options: FieryOptions = entry.options\n  const property: string | undefined = options.property\n  const replace: boolean = !!(options.reset && property)\n  const encoded: FieryData = parseDocument(doc, options)\n  const decoded: FieryData = decodeDocument(encoded, options)\n\n  if (!data)\n  {\n    const identifier: string = getDocumentIdentifier(vm, options, doc)\n\n    data = options.newDocument(decoded)\n    data[PROP_UID] = identifier\n\n    copyData(vm, data, decoded)\n    createRecord(data, entry)\n\n    if (options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        let subOptions: FieryOptions = options.sub[subProp]\n        let subEntryKey: string = doc.ref.path + ENTRY_SEPARATOR + subProp\n        let subEntry: FieryEntry = getEntry(vm, doc.ref.collection(subProp), subOptions, subEntryKey, true)\n\n        data[subProp] = factory(vm, subEntry)\n      }\n    }\n  }\n  else if (replace)\n  {\n    const replaced: FieryData = options.newDocument(decoded)\n\n    if (options.sub)\n    {\n      for (let subProp in options.sub)\n      {\n        if (data[subProp])\n        {\n          replaced[subProp] = data[subProp]\n        }\n      }\n    }\n\n    createRecord(replaced, entry)\n\n    data = copyData(vm, replaced, decoded)\n  }\n  else\n  {\n    copyData(vm, data, decoded)\n  }\n\n  return data\n}\n\nexport function copyData (vm: FieryVue, data: FieryData, update: FieryData): FieryData\n{\n  for (let prop in update)\n  {\n    vm.$set(data, prop, update[prop])\n  }\n\n  return data\n}\n\nexport function destroyDocuments (vm: FieryVue, map: FieryMap, fromObject?: FieryMap): void\n{\n  for (let id in map)\n  {\n    const old: FieryData = map[id]\n\n    destroyDocument(vm, old)\n\n    if (fromObject)\n    {\n      vm.$delete(fromObject, id)\n    }\n  }\n}\n\nexport function destroyDocument (vm: FieryVue, data: FieryData): void\n{\n  let { path, options } = getMetadata(vm, data)\n\n  if (options.sub)\n  {\n    const fiery: FieryInstance = vm.$fiery\n\n    for (let subProp in options.sub)\n    {\n      let subEntryKey: string = path + ENTRY_SEPARATOR + subProp\n      let subEntry: FieryEntry = fiery.entry[ subEntryKey ]\n\n      if (subEntry)\n      {\n        closeEntry(subEntry)\n\n        delete fiery.entry[ subEntryKey ]\n\n        if (typeof subEntry.index === 'number')\n        {\n          fiery.entryList[subEntry.index] = null\n\n          delete subEntry.index\n        }\n      }\n\n      forEach(data[subProp], (value) =>\n      {\n        destroyDocument(vm, value)\n      })\n    }\n  }\n}\n\nexport function getDocumentIdentifier (vm: FieryVue, options: FieryOptions, doc: DocumentSnapshot)\n{\n  return getStoreKey(vm, doc) +\n    UID_SEPARATOR +\n    options.id +\n    UID_SEPARATOR +\n    doc.ref.path\n}\n\nexport function getStoreKey (vm: FieryVue, doc: DocumentSnapshot): number\n{\n  const firestore = (<any>doc)._firestore\n  const db = firestore._databaseId\n  const id: string = db.database + STORE_SEPARATOR + db.projectId\n\n  const fiery: FieryInstance = vm.$fiery\n  let key: number = fiery.storeIdToKey[id]\n\n  if (!key)\n  {\n    key = ++fiery.storeKeyNext\n    fiery.stores[key] = firestore\n    fiery.storeIdToKey[id] = key\n  }\n\n  return key\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/documents.ts","\n\nimport { FieryVue, FieryEntry, FieryTarget, FierySource, FieryInstanceFactory, FieryOptions } from '../types'\nimport { getEntry } from '../entry'\n\n\n\nimport factoryDocument from './document'\nimport factoryMap from './map'\nimport factoryCollection from './collection'\n\n\n\nexport function factory (vm: FieryVue, entry: FieryEntry): FieryTarget\n{\n  let chosenFactory = (<any>entry.source).where\n    ? (entry.options.map ? factoryMap : factoryCollection)\n    : factoryDocument\n\n  return chosenFactory(vm, entry)\n}\n\nexport function factoryInstance (vm: FieryVue): FieryInstanceFactory\n{\n  return (source: FierySource, options?: string | Partial<FieryOptions>): FieryTarget => {\n    return factory(vm, getEntry(vm, source, options))\n  }\n}\n\nexport default factory\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory/index.ts","\nimport * as firebase from 'firebase'\n\n\nimport { FieryOptions, FieryEntry, FieryData, FieryVue } from '../types'\nimport { refreshDocument } from '../documents'\n\n\n\ntype DocumentSnapshot = firebase.firestore.DocumentSnapshot\ntype DocumentChange = firebase.firestore.DocumentChange\ntype DocumentReference = firebase.firestore.DocumentReference\ntype DocumentListenOptions = firebase.firestore.DocumentListenOptions\n\n\n\nexport function factory (vm: FieryVue, entry: FieryEntry): FieryData\n{\n  const source: DocumentReference = entry.source as DocumentReference\n  const options: FieryOptions = entry.options\n\n  if (options.once)\n  {\n    entry.promise = source.get(options.onceOptions)\n      .then((doc: DocumentSnapshot) =>\n      {\n        handleDocumentUpdate(vm, entry, doc)\n\n      }).catch(options.onError)\n  }\n  else\n  {\n    entry.off = source.onSnapshot(options.liveOptions as DocumentListenOptions,\n      (doc: DocumentSnapshot) =>\n      {\n        handleDocumentUpdate(vm, entry, doc)\n\n      }, options.onError)\n  }\n\n  return entry.target as FieryData\n}\n\nexport function handleDocumentUpdate (vm: FieryVue, entry: FieryEntry, doc: DocumentSnapshot): void\n{\n  const options: FieryOptions = entry.options\n\n  if (!doc.exists)\n  {\n    options.onMissing()\n  }\n  else\n  {\n    entry.target = refreshDocument(vm, entry, doc, entry.target)\n\n    if (options.reset && options.property)\n    {\n      vm[options.property] = entry.target\n    }\n\n    options.onSuccess(entry.target)\n  }\n}\n\nexport default factory\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory/document.ts","\nimport * as firebase from 'firebase'\n\n\n\nimport { PROP_UID } from '../constants'\nimport { FieryVue, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap } from '../types'\nimport { refreshDocument, destroyDocuments, destroyDocument } from '../documents'\n\n\n\ntype Query = firebase.firestore.Query\ntype QuerySnapshot = firebase.firestore.QuerySnapshot\ntype DocumentSnapshot = firebase.firestore.DocumentSnapshot\ntype DocumentChange = firebase.firestore.DocumentChange\ntype CollectionReference = firebase.firestore.CollectionReference\ntype QueryListenOptions = firebase.firestore.QueryListenOptions\n\n\n\nfunction factory (vm: FieryVue, entry: FieryEntry): FieryMap\n{\n  type CollectionQuery = CollectionReference | Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query ? options.query(entry.source) : entry.source) as CollectionQuery\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then((querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryMap = entry.target as FieryMap\n\n        let missing: FieryMap = {}\n        for (let id in target) {\n          missing[id] = target[id]\n        }\n\n        querySnapshot.forEach((doc: DocumentSnapshot) =>\n        {\n          const old: FieryData = target[doc.id]\n          const updated: FieryData = refreshDocument(vm, entry, doc, old)\n\n          vm.$set(target, doc.id, updated)\n          delete missing[doc.id]\n\n        }, options.onError)\n\n        destroyDocuments(vm, missing, target)\n\n        options.onSuccess(target)\n\n      }).catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(options.liveOptions as QueryListenOptions,\n      (querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryMap = entry.target as FieryMap\n\n        (<any>querySnapshot).docChanges().forEach((change: DocumentChange) =>\n        {\n          const doc: DocumentSnapshot = change.doc\n\n          switch (change.type) {\n            case 'modified':\n            case 'added':\n              const old: FieryData = target[doc.id]\n              const updated: FieryData = refreshDocument(vm, entry, doc, old)\n              vm.$set(target, doc.id, updated)\n              break\n            case 'removed':\n              destroyDocument(vm, target[doc.id])\n              vm.$delete(target, doc.id)\n              break\n          }\n        }, options.onError)\n\n        options.onSuccess(target)\n\n      }, options.onError)\n  }\n\n  return entry.target as FieryMap\n}\n\nexport default factory\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory/map.ts","\nimport * as firebase from 'firebase'\n\n\nimport { PROP_UID } from '../constants'\nimport { FieryVue, FieryEntry, FieryTarget, FieryData, FieryOptions, FieryMap } from '../types'\nimport { refreshDocument, destroyDocuments } from '../documents'\n\n\n\ntype Query = firebase.firestore.Query\ntype QuerySnapshot = firebase.firestore.QuerySnapshot\ntype DocumentSnapshot = firebase.firestore.DocumentSnapshot\ntype DocumentChange = firebase.firestore.DocumentChange\ntype CollectionReference = firebase.firestore.CollectionReference\ntype QueryListenOptions = firebase.firestore.QueryListenOptions\n\n\n\nexport function factory (vm: FieryVue, entry: FieryEntry): FieryData[]\n{\n  type CollectionQuery = CollectionReference | Query\n  const options: FieryOptions = entry.options\n  const query: CollectionQuery = (options.query ? options.query(entry.source) : entry.source) as CollectionQuery\n\n  if (options.once)\n  {\n    entry.promise = query.get(options.onceOptions)\n      .then((querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryData[] = entry.target as FieryData[]\n\n        const missing: FieryMap = {}\n\n        for (let i = 0; i < target.length; i++)\n        {\n          const old: FieryData = target[i]\n          missing[old[PROP_UID]] = old\n        }\n\n        target.splice(0, target.length);\n\n        querySnapshot.forEach((doc: DocumentSnapshot) =>\n        {\n          const old = missing[doc.id]\n          const updated = refreshDocument(vm, entry, doc, old)\n\n          target.push(updated)\n          delete missing[updated[PROP_UID]]\n\n        }, options.onError)\n\n        destroyDocuments(vm, missing)\n\n        options.onSuccess(target)\n\n      }).catch(options.onError)\n  }\n  else\n  {\n    entry.off = query.onSnapshot(options.liveOptions as QueryListenOptions,\n      (querySnapshot: QuerySnapshot) =>\n      {\n        const target: FieryData[] = entry.target as FieryData[]\n\n        (<any>querySnapshot).docChanges().forEach((change: DocumentChange) =>\n        {\n          const doc: DocumentSnapshot = change.doc\n\n          switch (change.type) {\n            case 'added':\n              const created: FieryData = refreshDocument(vm, entry, doc)\n              target.splice(change.newIndex, 0, created)\n              break\n            case 'removed':\n              target.splice(change.oldIndex, 1)\n              break\n            case 'modified':\n              const old: FieryData = target[change.oldIndex]\n              const updated: FieryData = refreshDocument(vm, entry, doc, old)\n\n              if (change.oldIndex !== change.newIndex) {\n                target.splice(change.oldIndex, 1)\n                target.splice(change.newIndex, 0, updated)\n              } else {\n                target.splice(change.newIndex, 1, updated)\n              }\n              break\n          }\n        }, options.onError)\n\n        options.onSuccess(target)\n\n      }, options.onError)\n  }\n\n  return entry.target as FieryData[]\n}\n\nexport default factory\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory/collection.ts"],"sourceRoot":""}